{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wiki SIKN dan JIKN Wiki SIKN dan JIKN merupakan aplikasi yang digunakan sebagai sarana untuk menyimpan pengetahuan dan informasi terkait dengan pengembangan SIKN dan JIKN pada Arsip Nasional Republik Indonesia. Selain itu juga digunakan sebagai aplikasi berbagi data yang ada di Pusat Sistem dan Jaringan Informasi Kearsipan Nasional Tujuann dari Wiki SIKN dan JIKN ini adalah terdokumentasikannya seluruh arsitektur, rancangan, dan konfigurasi sistem SIKN dan JIKN. Dan juga untuk mempermudah pendistribusian data untuk kegiatan rutin di Pusat SIKN dan JIKN Manfaat yang dapat diberikan adalah sebagai berikut: Pusat SIKN dan JIKN memiliki sistem standar untuk mendokumentasikan sistem aplikasi SDM IT pada pusat SIKN dan JIKN dapat menulis, saling berbagi pengetahuan dan berkolaborasi dalam pengembangan sistem Anggota simpul jaringan dapat mengakses dan mempelajari cara dan informasi teknis terkait dengan kebutuhan dan konfigurasi sistem aplikasi SIKN dan JIKN Menjaga kontinuitas sistem SIKN dan JIKN sehingg tetap terpelihara dan beroperasi dengan stabil Berikut ini adalah informasi yang sudah disimpan di dalam Wiki SIKN: Instalasi Konfigurasi Petunjuk Teknis Penyelesaian Masalah Berbagi Data Docker Traefik Migrasi Data Permasalahan yang sering terjadi Data PIC Helpdesk Nasional Atom Portainer Best Practice Migrasi Data PNRI-ANRI Mail Setting Helpdesk Data Survey Kepuasan Layanan SIKN dan JIKN Grafana Dashboard Share data among machines in docker Data Layanan SIKN dan JIKN Mkdocs Traefik and Own SSL certs Extend Disk Size OpenEDX In Docker Generate SSH Key On Putty Redhat Subscription RHV Database Harvest Data SIKN Keycloak Membuat Docker Image Mounting New Disk in Server NFS in Docker Swarm Query Data Kearsipan Setup HA App with Docker Swarm and Gulster","title":"Home"},{"location":"#wiki-sikn-dan-jikn","text":"Wiki SIKN dan JIKN merupakan aplikasi yang digunakan sebagai sarana untuk menyimpan pengetahuan dan informasi terkait dengan pengembangan SIKN dan JIKN pada Arsip Nasional Republik Indonesia. Selain itu juga digunakan sebagai aplikasi berbagi data yang ada di Pusat Sistem dan Jaringan Informasi Kearsipan Nasional Tujuann dari Wiki SIKN dan JIKN ini adalah terdokumentasikannya seluruh arsitektur, rancangan, dan konfigurasi sistem SIKN dan JIKN. Dan juga untuk mempermudah pendistribusian data untuk kegiatan rutin di Pusat SIKN dan JIKN Manfaat yang dapat diberikan adalah sebagai berikut: Pusat SIKN dan JIKN memiliki sistem standar untuk mendokumentasikan sistem aplikasi SDM IT pada pusat SIKN dan JIKN dapat menulis, saling berbagi pengetahuan dan berkolaborasi dalam pengembangan sistem Anggota simpul jaringan dapat mengakses dan mempelajari cara dan informasi teknis terkait dengan kebutuhan dan konfigurasi sistem aplikasi SIKN dan JIKN Menjaga kontinuitas sistem SIKN dan JIKN sehingg tetap terpelihara dan beroperasi dengan stabil Berikut ini adalah informasi yang sudah disimpan di dalam Wiki SIKN: Instalasi Konfigurasi Petunjuk Teknis Penyelesaian Masalah Berbagi Data Docker Traefik Migrasi Data Permasalahan yang sering terjadi Data PIC Helpdesk Nasional Atom Portainer Best Practice Migrasi Data PNRI-ANRI Mail Setting Helpdesk Data Survey Kepuasan Layanan SIKN dan JIKN Grafana Dashboard Share data among machines in docker Data Layanan SIKN dan JIKN Mkdocs Traefik and Own SSL certs Extend Disk Size OpenEDX In Docker Generate SSH Key On Putty Redhat Subscription RHV Database Harvest Data SIKN Keycloak Membuat Docker Image Mounting New Disk in Server NFS in Docker Swarm Query Data Kearsipan Setup HA App with Docker Swarm and Gulster","title":"Wiki SIKN dan JIKN"},{"location":"bestpractise/","text":"konek ke vpn Login ke server/portainer dimana aplikasi akan dideploy: a. worker1 b. worker2 c. worker3 d. worker4 e. worker5 f. worker6 cd /sikn \\ && sudo git clone -b stable/2.5.x https://github.com/gitsikn/atom.git nama_simpul Versi qa 2.6.x cd /sikn \\ git clone -b qa/2.6.x https://github.com/artefactual/atom.git nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data referensi docker-stack https://github.com/gitsikn/atom/blob/stable/2.5.x/docker/docker-stack.yml sesuaikan nama_simpul dengan nama simpul yang akan dideploy Masuk kedalam Portainer membuat stack dengan nama simpul deploy jalankan di container \"atom\" make -C plugins/arDominionPlugin \\ && php symfony tools:purge --demo publish port (jangan bentrok) test di browser http://192.168.101.100:63106 https://github.com/gitsikn/docker_documentation/wiki/6.-Migrasi-Data Membuat database baru Lokasi Eksekusi: Container Percona (database) mysql -u root -p -e 'drop database nama_simpul;' mysql -u root -p -e 'create database nama_simpul character set utf8 collate utf8_unicode_ci;' Download data mkdir -p /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul atau jika menggunakan port tertentu rsync -r -v --progress -e 'ssh -p 221' anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul Copy data dari direktory backup ke lokasi database cp -rf /sikn/backup_data/nama_simpul/nama_simpul.sql /sikn/nama_simpul/percona_data Restore Database lokasi: Container Database mysql -u root -p nama_simpul < /var/lib/mysql/nama_simpul.sql; Upgrade Database lokasi: container atom php symfony tools:upgrade-sql php symfony cc \\ && php symfony search:populate Download Objek Digital mkdir -p /sikn/backup_data/nama_simpul/ \\ cd /sikn/backup_data/nama_simpul \\ && rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/uploads /sikn/backup_data/nama_simpul/ cp -rf /sikn/backup_data/nama_simpul/uploads /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/uploads Logo dan Favicon rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/images/logo.png /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/favicon.ico /sikn/backup_data/nama_simpul ``` cp -rf /sikn/backup_data/nama_simpul/favicon.ico /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/favicon.ico cp -rf /sikn/backup_data/nama_simpul/logo.png /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/images/logo.png","title":"Best Practice Migrasi Perpusnas ANRI"},{"location":"bestpractise/#versi-qa-26x","text":"cd /sikn \\ git clone -b qa/2.6.x https://github.com/artefactual/atom.git nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data","title":"Versi qa 2.6.x"},{"location":"bestpractise/#referensi-docker-stack","text":"https://github.com/gitsikn/atom/blob/stable/2.5.x/docker/docker-stack.yml sesuaikan nama_simpul dengan nama simpul yang akan dideploy Masuk kedalam Portainer membuat stack dengan nama simpul deploy jalankan di container \"atom\" make -C plugins/arDominionPlugin \\ && php symfony tools:purge --demo publish port (jangan bentrok) test di browser http://192.168.101.100:63106 https://github.com/gitsikn/docker_documentation/wiki/6.-Migrasi-Data","title":"referensi docker-stack"},{"location":"bestpractise/#membuat-database-baru","text":"Lokasi Eksekusi: Container Percona (database) mysql -u root -p -e 'drop database nama_simpul;' mysql -u root -p -e 'create database nama_simpul character set utf8 collate utf8_unicode_ci;'","title":"Membuat database baru"},{"location":"bestpractise/#download-data","text":"mkdir -p /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul atau jika menggunakan port tertentu rsync -r -v --progress -e 'ssh -p 221' anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul","title":"Download data"},{"location":"bestpractise/#copy-data-dari-direktory-backup-ke-lokasi-database","text":"cp -rf /sikn/backup_data/nama_simpul/nama_simpul.sql /sikn/nama_simpul/percona_data","title":"Copy data dari direktory backup ke lokasi database"},{"location":"bestpractise/#restore-database","text":"lokasi: Container Database mysql -u root -p nama_simpul < /var/lib/mysql/nama_simpul.sql;","title":"Restore Database"},{"location":"bestpractise/#upgrade-database","text":"lokasi: container atom php symfony tools:upgrade-sql php symfony cc \\ && php symfony search:populate","title":"Upgrade Database"},{"location":"bestpractise/#download-objek-digital","text":"mkdir -p /sikn/backup_data/nama_simpul/ \\ cd /sikn/backup_data/nama_simpul \\ && rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/uploads /sikn/backup_data/nama_simpul/ cp -rf /sikn/backup_data/nama_simpul/uploads /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/uploads","title":"Download Objek Digital"},{"location":"bestpractise/#logo-dan-favicon","text":"rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/images/logo.png /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/favicon.ico /sikn/backup_data/nama_simpul ``` cp -rf /sikn/backup_data/nama_simpul/favicon.ico /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/favicon.ico cp -rf /sikn/backup_data/nama_simpul/logo.png /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/images/logo.png","title":"Logo dan Favicon"},{"location":"dashboard/","text":"Dashboard Script","title":"Dashboard"},{"location":"dashboard/#dashboard-script","text":"","title":"Dashboard Script"},{"location":"database/","text":"Backup Percona Database Referensi: https://www.percona.com/doc/percona-xtrabackup/2.2/xtrabackup_bin/creating_a_backup.html Proses backup menggunakan tools xtrabackup lokasi database pada percona: /var/lib/mysql Install xtrabackup yum install xtrabackup -y xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/data/backups/mysql/ Restore Percona Database Referensi: https://www.percona.com/doc/percona-xtrabackup/2.1/xtrabackup_bin/restoring_a_backup.html","title":"Database"},{"location":"database/#backup-percona-database","text":"Referensi: https://www.percona.com/doc/percona-xtrabackup/2.2/xtrabackup_bin/creating_a_backup.html Proses backup menggunakan tools xtrabackup lokasi database pada percona: /var/lib/mysql","title":"Backup Percona Database"},{"location":"database/#install-xtrabackup","text":"yum install xtrabackup -y xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/data/backups/mysql/","title":"Install xtrabackup"},{"location":"database/#restore-percona-database","text":"Referensi: https://www.percona.com/doc/percona-xtrabackup/2.1/xtrabackup_bin/restoring_a_backup.html","title":"Restore Percona Database"},{"location":"extend_disk/","text":"Melihat daftar hardisk dan partisi","title":"Extend Disk Size"},{"location":"extend_disk/#melihat-daftar-hardisk-dan-partisi","text":"","title":"Melihat daftar hardisk dan partisi"},{"location":"generate_ssh/","text":"membuat user dengan hak akses sudoers Ubuntu adduser username usermod -aG sudo username CentOS adduser username passwd username usermod -aG wheel username mkdir -p ~/.ssh | touch ~/.ssh/authorized_keys chmod 0700 ~/.ssh; chmod 0644 ~/.ssh/authorized_keys nano ~/.ssh/authorized_keys (kopi public key)","title":"Generate SSH key on Putty"},{"location":"harvest_data_simpul/","text":"Harvest data dari simpul ke JIKN Tentukan Simpul yang akan di harvest login ke server sumber data (ssh) masuk ke direktori simpul (/usr/share/nginx/nama_simpul) jalankan perintah export (arsip terpublikasi) Export Data Format XML php symfony export:bulk --public --items-until-update=5 --single-slug=\"nama_slug\" /home/anri/XML_FOR_JIKN/nama_deskripsi.xml Format CSV php symfony csv:export --public --items-until-update=5 --single-slug=\"arsip-statis-direktorat-pembangunan-desa-ditbangdes\" /home/anri/XML_FOR_JIKN/arsip-statis-direktorat-pembangunan-desa-ditbangdes.csv php symfony csv:export --single-slug=\"slug-name\" /nama-file.csv download file xml/csv dari server sumber data ke server tujuan rsync -r -v --progress -e ssh anri@103.28.21.27:/home/anri/XML_FOR_JIKN/nama_deskripsi.xml /backup_data/ input password copy file xml dari host ke atom container docker cp /backup_data/nama_deskripsi.xml 7db0f944fd2b:/jikn/deskripsi_arsip.xml import file xml ke atom Format XML php symfony import:bulk --output=\"/tmp/output-results.csv\" /jikn Format CSV php symfony csv:import /jikn/nama_deskripsi.csv","title":"Harvest data simpul ke JIKN"},{"location":"harvest_data_simpul/#harvest-data-dari-simpul-ke-jikn","text":"Tentukan Simpul yang akan di harvest login ke server sumber data (ssh) masuk ke direktori simpul (/usr/share/nginx/nama_simpul) jalankan perintah export (arsip terpublikasi)","title":"Harvest data dari simpul ke JIKN"},{"location":"harvest_data_simpul/#export-data","text":"","title":"Export Data"},{"location":"harvest_data_simpul/#format-xml","text":"php symfony export:bulk --public --items-until-update=5 --single-slug=\"nama_slug\" /home/anri/XML_FOR_JIKN/nama_deskripsi.xml","title":"Format XML"},{"location":"harvest_data_simpul/#format-csv","text":"php symfony csv:export --public --items-until-update=5 --single-slug=\"arsip-statis-direktorat-pembangunan-desa-ditbangdes\" /home/anri/XML_FOR_JIKN/arsip-statis-direktorat-pembangunan-desa-ditbangdes.csv php symfony csv:export --single-slug=\"slug-name\" /nama-file.csv download file xml/csv dari server sumber data ke server tujuan rsync -r -v --progress -e ssh anri@103.28.21.27:/home/anri/XML_FOR_JIKN/nama_deskripsi.xml /backup_data/ input password copy file xml dari host ke atom container docker cp /backup_data/nama_deskripsi.xml 7db0f944fd2b:/jikn/deskripsi_arsip.xml import file xml ke atom Format XML php symfony import:bulk --output=\"/tmp/output-results.csv\" /jikn Format CSV php symfony csv:import /jikn/nama_deskripsi.csv","title":"Format CSV"},{"location":"install_atom/","text":"4. Install AtoM Catatan: Instalasi pada simpul resource tidak dibatasi versi 2.5 Sesuaikan nama_simpul , konfigurasi pada file sikn.yml di docker-yml/sikn.yml find and replace nama_simpul dengan nama simpul baru (alt + r) pada nano editor pastikan port pada service nginx belum digunakan sebelumnya mkdir -p /sikn \\ && cd /sikn \\ && git clone -b stable/2.5.x https://github.com/gitsikn/atom.git nama_simpul && cd /sikn/nama_simpul/docker/ chmod -R 755 /nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data sesuikan parameter database pada file docker-stack.yml password dapat digenerate menggunakan tools keypass ... #percona_database percona: image: percona:5.6 environment: - MYSQL_ROOT_PASSWORD=changethis - MYSQL_DATABASE=nama_simpul - MYSQL_USER=nama_simpul - MYSQL_PASSWORD=changethis ... 5. membuat env variable dan menjalankan container (optional) export COMPOSE_FILE=\"$PWD/docker/docker-compose.dev.yml\" atau dieksekusi dengan pilihan -f lokasi_file cd nama_simpul docker-compose -f docker-compose.yml up -d mode docker swarm docker stack deploy -c docker-stack.yml nama_simpul periksa seluruh container hingga seluruh container dengan status running docker stack ls docker stack ps nama_stack docker service logs nama_service docker ps -a 6. build stylesheets docker ps docker-compose -f docker-compose-file.yml exec service_name make -C plugins/arDominionPlugin atau docker exec container_id make -C plugins/arDominionPlugin atau masuk ke docker gui (portainer) dan masuk ke console AtoM make -C plugins/arDominionPlugin 7. purge/hapus data dari database atom dengan mengunakan mode demo docker-compose exec atom php symfony tools:purge --demo php symfony cc && php symfony search:populate atau masuk ke docker gui (portainer) dan masuk ke console AtoM php symfony tools:purge --demo restart container worker docker restart $(docker ps -a -q) melihat seluruh container dengan status up/exited docker ps -a mendapatkan container id docker ps -aq 11. test AtoM tambahkan dns lokal pada file C:\\Windows\\System32\\drivers\\etc\\host sikn.nama_simpul.go.id 12. Custom AtoM custom AtoM Mengubaha default languange pada file data/fixtures/settings.yml bagian QubitSetting_26: scope: i18n_languages","title":"AtoM"},{"location":"install_atom/#4-install-atom","text":"Catatan: Instalasi pada simpul resource tidak dibatasi versi 2.5 Sesuaikan nama_simpul , konfigurasi pada file sikn.yml di docker-yml/sikn.yml find and replace nama_simpul dengan nama simpul baru (alt + r) pada nano editor pastikan port pada service nginx belum digunakan sebelumnya mkdir -p /sikn \\ && cd /sikn \\ && git clone -b stable/2.5.x https://github.com/gitsikn/atom.git nama_simpul && cd /sikn/nama_simpul/docker/ chmod -R 755 /nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data sesuikan parameter database pada file docker-stack.yml password dapat digenerate menggunakan tools keypass ... #percona_database percona: image: percona:5.6 environment: - MYSQL_ROOT_PASSWORD=changethis - MYSQL_DATABASE=nama_simpul - MYSQL_USER=nama_simpul - MYSQL_PASSWORD=changethis ...","title":"4. Install AtoM"},{"location":"install_atom/#5-membuat-env-variable-dan-menjalankan-container-optional","text":"export COMPOSE_FILE=\"$PWD/docker/docker-compose.dev.yml\" atau dieksekusi dengan pilihan -f lokasi_file cd nama_simpul docker-compose -f docker-compose.yml up -d","title":"5. membuat env variable dan menjalankan container (optional)"},{"location":"install_atom/#mode-docker-swarm","text":"docker stack deploy -c docker-stack.yml nama_simpul periksa seluruh container hingga seluruh container dengan status running docker stack ls docker stack ps nama_stack docker service logs nama_service docker ps -a","title":"mode docker swarm"},{"location":"install_atom/#6-build-stylesheets","text":"docker ps docker-compose -f docker-compose-file.yml exec service_name make -C plugins/arDominionPlugin atau docker exec container_id make -C plugins/arDominionPlugin atau masuk ke docker gui (portainer) dan masuk ke console AtoM make -C plugins/arDominionPlugin","title":"6. build stylesheets"},{"location":"install_atom/#7-purgehapus-data-dari-database-atom-dengan-mengunakan-mode-demo","text":"docker-compose exec atom php symfony tools:purge --demo php symfony cc && php symfony search:populate atau masuk ke docker gui (portainer) dan masuk ke console AtoM php symfony tools:purge --demo restart container worker docker restart $(docker ps -a -q) melihat seluruh container dengan status up/exited docker ps -a mendapatkan container id docker ps -aq","title":"7. purge/hapus data dari database atom dengan mengunakan mode demo"},{"location":"install_atom/#11-test-atom","text":"tambahkan dns lokal pada file C:\\Windows\\System32\\drivers\\etc\\host sikn.nama_simpul.go.id","title":"11. test AtoM"},{"location":"install_atom/#12-custom-atom","text":"custom AtoM Mengubaha default languange pada file data/fixtures/settings.yml bagian QubitSetting_26: scope: i18n_languages","title":"12. Custom AtoM"},{"location":"install_docker/","text":"Melihat Spesifikasi server Melihat cpu lscpu Informasi memory free -m Informasi disk df -h Informasi OS lsb_release -a Set Domain Name export USE_HOSTNAME=nama_domain.go.id \\ && echo $USE_HOSTNAME > /etc/hostname \\ && hostname -F /etc/hostname Install the latest updates Ubuntu apt-get update && apt-get upgrade -y CentOS yum update -y \\ yum upgrade 1. Download dan Install Docker mkdir -p /opt/docker \\ && cd /opt/docker \\ && curl -fsSL get.docker.com -o get-docker.sh \\ && CHANNEL=stable sh get-docker.sh Configure Docker to start on boot sudo systemctl enable docker && sudo systemctl start docker 2. Install Docker-Compose (Skip jika mengggunakan docker swarm) sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Test Docker Installation docker --version \\ && docker run hello-world 3. Test Instalasi Docker-Compose docker-compose --version Set Docker Experimental echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json; systemctl restart docker cek status experimental docker version -f '{{.Server.Experimental}}' Tuning virtual machines Edit /etc/sysctl.conf dengan menambahkan vm.max_map_count=262144 atau eksekusi perintah sudo sysctl -w vm.max_map_count=262144 Cek vm.max_map_count sysctl vm.max_map_count mkdir -p /etc/systemd/system/docker.service.d/ \\ && touch /etc/systemd/system/docker.service.d/10-machine.conf \\ && sudo sed -i '/ExecStart=\\/usr\\/bin\\/dockerd/ s/$/--default-ulimit memlock=-1/' /etc/systemd/system/docker.service.d/10-machine.conf akan terbentuk file override.conf pada /etc/systemd/system/docker.service.d echo -e \"[Service]\\nLimitMEMLOCK=infinity\" | SYSTEMD_EDITOR=tee systemctl edit docker.service \\ && systemctl daemon-reload && systemctl restart docker reboot Open Port on Ubuntu ufw allow 22/tcp ufw allow 2376/tcp ufw allow 2377/tcp ufw allow 7946/tcp ufw allow 7946/udp ufw allow 4789/udp ufw reload Open Port on CentOS firewall-cmd --add-port=22/tcp --permanent firewall-cmd --add-port=2376/tcp --permanent firewall-cmd --add-port=2377/tcp --permanent firewall-cmd --add-port=7946/tcp --permanent firewall-cmd --add-port=7946/udp --permanent firewall-cmd --add-port=4789/udp --permanent firewall-cmd --reload Set up swarm mode docker swarm init add manager nodes (optional) docker swarm join-token manager Add worker nodes (optional) docker swarm join-token worker check docker node ls","title":"Docker"},{"location":"install_docker/#melihat-spesifikasi-server","text":"Melihat cpu lscpu Informasi memory free -m Informasi disk df -h Informasi OS lsb_release -a","title":"Melihat Spesifikasi server"},{"location":"install_docker/#set-domain-name","text":"export USE_HOSTNAME=nama_domain.go.id \\ && echo $USE_HOSTNAME > /etc/hostname \\ && hostname -F /etc/hostname","title":"Set Domain Name"},{"location":"install_docker/#install-the-latest-updates","text":"","title":"Install the latest updates"},{"location":"install_docker/#ubuntu","text":"apt-get update && apt-get upgrade -y CentOS yum update -y \\ yum upgrade","title":"Ubuntu"},{"location":"install_docker/#1-download-dan-install-docker","text":"mkdir -p /opt/docker \\ && cd /opt/docker \\ && curl -fsSL get.docker.com -o get-docker.sh \\ && CHANNEL=stable sh get-docker.sh Configure Docker to start on boot sudo systemctl enable docker && sudo systemctl start docker","title":"1. Download dan Install Docker"},{"location":"install_docker/#2-install-docker-compose-skip-jika-mengggunakan-docker-swarm","text":"sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Test Docker Installation docker --version \\ && docker run hello-world","title":"2. Install Docker-Compose (Skip jika mengggunakan docker swarm)"},{"location":"install_docker/#3-test-instalasi-docker-compose","text":"docker-compose --version Set Docker Experimental echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json; systemctl restart docker cek status experimental docker version -f '{{.Server.Experimental}}' Tuning virtual machines Edit /etc/sysctl.conf dengan menambahkan vm.max_map_count=262144 atau eksekusi perintah sudo sysctl -w vm.max_map_count=262144 Cek vm.max_map_count sysctl vm.max_map_count mkdir -p /etc/systemd/system/docker.service.d/ \\ && touch /etc/systemd/system/docker.service.d/10-machine.conf \\ && sudo sed -i '/ExecStart=\\/usr\\/bin\\/dockerd/ s/$/--default-ulimit memlock=-1/' /etc/systemd/system/docker.service.d/10-machine.conf akan terbentuk file override.conf pada /etc/systemd/system/docker.service.d echo -e \"[Service]\\nLimitMEMLOCK=infinity\" | SYSTEMD_EDITOR=tee systemctl edit docker.service \\ && systemctl daemon-reload && systemctl restart docker reboot Open Port on Ubuntu ufw allow 22/tcp ufw allow 2376/tcp ufw allow 2377/tcp ufw allow 7946/tcp ufw allow 7946/udp ufw allow 4789/udp ufw reload Open Port on CentOS firewall-cmd --add-port=22/tcp --permanent firewall-cmd --add-port=2376/tcp --permanent firewall-cmd --add-port=2377/tcp --permanent firewall-cmd --add-port=7946/tcp --permanent firewall-cmd --add-port=7946/udp --permanent firewall-cmd --add-port=4789/udp --permanent firewall-cmd --reload Set up swarm mode docker swarm init add manager nodes (optional) docker swarm join-token manager Add worker nodes (optional) docker swarm join-token worker check docker node ls","title":"3. Test Instalasi Docker-Compose"},{"location":"install_grafana/","text":"Membuat domain add domain below to local DNS or public DNS dashboard.domain_name alertmanager.domain_name unsee.domain_name prometheus.domain_name export DOMAIN=root_domain.go.id && export ADMIN_USER=admin && export ADMIN_PASSWORD=password && export HASHED_PASSWORD=$(openssl passwd -apr1 $ADMIN_PASSWORD) && export TRAEFIK_PUBLIC_TAG=traefik-public CentOS yum install git Ubuntu apt install git cd /opt/ \\ && git clone https://github.com/gitsikn/swarmprom.git \\ && cd swarmprom Multiple node docker stack deploy -c docker-compose.traefik.yml swarmprom Single node docker-compose -f docker-compose.traefik.yml up -d LOKASI: CONTAINER PERCONA Open port untuk grafana (3306), dengan menggunakan portainer membuat user database dengan hak akses ALL PRIVILEGES (CREATE, DROP, DELETE, INSERT, SELECT, UPDATE) untuk grafana (pada container database) GRANT ALL PRIVILEGES ON database_name.* TO 'grafanaReader'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION; membuat user database dengan hak akses read untuk grafana (pada container database) mysql> GRANT SELECT ON DATABASE_NAME.* TO 'grafanareader'@'%' IDENTIFIED BY 'PASSWORD'; Melihat user database SELECT user, host FROM mysql.user; Menampilkan hak pada user database SHOW GRANTS FOR 'USER_NAME'@'IP_ADDRESS'; Revoke hak akses REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'USER_NAME'@'IP_ADDRESS'; DROP USER DROP USER 'bloguser'@'localhost';","title":"Grafana"},{"location":"install_grafana/#membuat-domain","text":"add domain below to local DNS or public DNS dashboard.domain_name alertmanager.domain_name unsee.domain_name prometheus.domain_name export DOMAIN=root_domain.go.id && export ADMIN_USER=admin && export ADMIN_PASSWORD=password && export HASHED_PASSWORD=$(openssl passwd -apr1 $ADMIN_PASSWORD) && export TRAEFIK_PUBLIC_TAG=traefik-public CentOS yum install git Ubuntu apt install git cd /opt/ \\ && git clone https://github.com/gitsikn/swarmprom.git \\ && cd swarmprom Multiple node docker stack deploy -c docker-compose.traefik.yml swarmprom Single node docker-compose -f docker-compose.traefik.yml up -d LOKASI: CONTAINER PERCONA Open port untuk grafana (3306), dengan menggunakan portainer membuat user database dengan hak akses ALL PRIVILEGES (CREATE, DROP, DELETE, INSERT, SELECT, UPDATE) untuk grafana (pada container database) GRANT ALL PRIVILEGES ON database_name.* TO 'grafanaReader'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION; membuat user database dengan hak akses read untuk grafana (pada container database) mysql> GRANT SELECT ON DATABASE_NAME.* TO 'grafanareader'@'%' IDENTIFIED BY 'PASSWORD'; Melihat user database SELECT user, host FROM mysql.user; Menampilkan hak pada user database SHOW GRANTS FOR 'USER_NAME'@'IP_ADDRESS'; Revoke hak akses REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'USER_NAME'@'IP_ADDRESS'; DROP USER DROP USER 'bloguser'@'localhost';","title":"Membuat domain"},{"location":"install_mkdocs/","text":"Referensi https://www.mkdocs.org/ https://romandc.com/techtalk-mkdocs/ install Mkdocs Kebutuhan Python PIP MkDocs supports Python versions 2.7, 3.4, 3.5, 3.6, 3.7 and pypy. Enable the EPEL repository yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm `` Install PIP sudo yum install python-pip Install virtualenv pip install virtualenv Upgrade PIP pip install --upgrade pip membuat virtual environment virtualenv env source env/bin/activate generate project mkdocs new my-project cd my-project","title":"Mkdocs"},{"location":"install_openedx/","text":"Referensi https://edx.readthedocs.io/projects/edx-installing-configuring-and-running/en/latest/installation/install_devstack.html Prerequisite: a. docker b. docker-compose c. make Install Devstack mkdir /openedx \\ && cd /openedx \\ && git clone https://github.com/edx/devstack \\ && cd devstack git checkout open-release/ironwood.master export OPENEDX_RELEASE=ironwood.master make dev.checkout make dev.clone make dev.provision Start openedx service make dev.up URL openedx Services URL Catalog/Discovery http://localhost:18381/api-docs/ Credentials http://localhost:18150/api/v2/ E-Commerce/Otto http://localhost:18130/dashboard/ LMS http://localhost:18000/ Notes/edx-notes-api http://localhost:18120/api/v1/ Studio/CMS http://localhost:18010/ Update Latest Image make down make pull make dev.up","title":"OpenEDX in docker"},{"location":"install_openedx/#referensi","text":"https://edx.readthedocs.io/projects/edx-installing-configuring-and-running/en/latest/installation/install_devstack.html Prerequisite: a. docker b. docker-compose c. make","title":"Referensi"},{"location":"install_openedx/#install-devstack","text":"mkdir /openedx \\ && cd /openedx \\ && git clone https://github.com/edx/devstack \\ && cd devstack git checkout open-release/ironwood.master export OPENEDX_RELEASE=ironwood.master make dev.checkout make dev.clone make dev.provision","title":"Install Devstack"},{"location":"install_openedx/#start-openedx-service","text":"make dev.up","title":"Start openedx service"},{"location":"install_openedx/#url-openedx","text":"Services URL Catalog/Discovery http://localhost:18381/api-docs/ Credentials http://localhost:18150/api/v2/ E-Commerce/Otto http://localhost:18130/dashboard/ LMS http://localhost:18000/ Notes/edx-notes-api http://localhost:18120/api/v1/ Studio/CMS http://localhost:18010/","title":"URL openedx"},{"location":"install_openedx/#update-latest-image","text":"make down make pull make dev.up","title":"Update Latest Image"},{"location":"kepuasan_layanan/","text":"Data Survey Kepuasan Pelayanan SIKN dan JIKN Berikut ini link data Survey Kepuasan Layanan SIKN dan JIKN secara realtime: Data Survey Kepuasan Pelayanan SIKN dan JIKN Data ini dibuat oleh: Gusti Made (Pranata Komputer pada unit Pengembangan Sistem dan Jaringan Informasi Nasional)","title":"Data Survey Kepuasan Layanan SIKN dan JIKN"},{"location":"kepuasan_layanan/#data-survey-kepuasan-pelayanan-sikn-dan-jikn","text":"Berikut ini link data Survey Kepuasan Layanan SIKN dan JIKN secara realtime: Data Survey Kepuasan Pelayanan SIKN dan JIKN Data ini dibuat oleh: Gusti Made (Pranata Komputer pada unit Pengembangan Sistem dan Jaringan Informasi Nasional)","title":"Data Survey Kepuasan Pelayanan SIKN dan JIKN"},{"location":"keycloak/","text":"Referensi https://osc.github.io/ood-documentation/master/authentication/tutorial-oidc-keycloak-rhel7/install-keycloak.html open firewall http://ask.xmodulo.com/open-port-firewall-centos-rhel.html jenkins and keycloak https://wiki.jenkins.io/display/JENKINS/keycloak-plugin","title":"Keycloak"},{"location":"layanan_sjikn/","text":"Data Layanan SIKN dan JIKN Berikut ini link data Layanan SIKN dan JIKN secara realtime: Data Layanan SIKN dan JIKN Data ini dibuat oleh: Gusti Made (Pranata Komputer pada unit Pengembangan Sistem dan Jaringan Informasi Nasional)","title":"Data Layanan SIKN dan JIKN"},{"location":"layanan_sjikn/#data-layanan-sikn-dan-jikn","text":"Berikut ini link data Layanan SIKN dan JIKN secara realtime: Data Layanan SIKN dan JIKN Data ini dibuat oleh: Gusti Made (Pranata Komputer pada unit Pengembangan Sistem dan Jaringan Informasi Nasional)","title":"Data Layanan SIKN dan JIKN"},{"location":"mailhelpdesk/","text":"Mail Server Setting In Helpdesk SIKN Troubleshoot Mail Server di Helpdesk System incoming pada email helpdesk menggunakan POPS, agar email yg masuk pada alamat support@sikn tidak di hapus, tetapi di copy System outgoing pada email helpdesk menggunakan SMTPS Link dari support manage engine untuk troubleshoot masalah pada mail server http://kbase.zohocorp.com/kbase/ServiceDeskPlus/TroubleShooting/file_100005.html","title":"Mail Setting Helpdesk"},{"location":"mailhelpdesk/#mail-server-setting-in-helpdesk-sikn","text":"","title":"Mail Server Setting In Helpdesk SIKN"},{"location":"mailhelpdesk/#troubleshoot-mail-server-di-helpdesk","text":"System incoming pada email helpdesk menggunakan POPS, agar email yg masuk pada alamat support@sikn tidak di hapus, tetapi di copy System outgoing pada email helpdesk menggunakan SMTPS Link dari support manage engine untuk troubleshoot masalah pada mail server http://kbase.zohocorp.com/kbase/ServiceDeskPlus/TroubleShooting/file_100005.html","title":"Troubleshoot Mail Server di Helpdesk"},{"location":"membuat_docker_image/","text":"docker tag local-image:tagname new-repo:tagname docker push new-repo:tagname docker push dockersikn/grafana:tagname docker push dockersikn/grafana:tagname contoh: account docker hub: dockersikn buat repository: misal (grafana) maka akan terbentuk repository kosong dengan nama lokasi dockersikn/grafana build docker image docker build /path/to/Dockerfile -t dockerhubaccount/repository:tagname contoh: docker build /opt/grafana/ -t dockersikn/grafana:latest maka untuk push image ke docker hub dengan syntax docker push dockersikn/grafana:6.2.5","title":"Membuat docker image"},{"location":"migrasi/","text":"Prinsip Migrasi Database a. backup database b. drop database lama c. create database baru d. restore database Install rsync (centos) yum install rsync Backup database sql Lokasi: Server Lama Gunakan screen jika ukuran database yang dibackup besar a. memulai screen dengan nama screen -S nama_screen b. keluar screen ctrl + a + d c. masuk screen screen -r nama_screen d. daftar screen screen -ls Dump SQL Data mysqldump -u root -p old_database > /tmp/nama_simpul.sql (input password) download data sql Lokasi: Server Baru mkdir -p /backup_data/backup_sql \\ && cd /backup_data rsync -r -v --progress -e ssh username@ip_public:/tmp/nama_simpul.sql /backup_data/backup_sql/ melihat ukuran objek digital du -sch /directory_path download objek digital mkdir -p /backup_data/objek-digital \\ && rsync -r -v --progress -e ssh username@ip_public:/usr/share/nginx/nama_simpul/uploads /backup_data/objek-digital cp -rf /backup_data/nama_simpul/objek-digital/uploads /sikn/nama_simpul/ chown -R www-data:www-data /sikn/nama_simpul/uploads chmod -R 0755 /sikn/nama_simpul/uploads download logo rsync -r -v --progress -e ssh anri@demo.sikn.go.id:/usr/share/nginx/nama_simpul/images/logo.png /backup_data/ input password cp -rf /backup_data/logo.png /nama_simpul/images/ && chmod 644 /nama_simpul/images/logo.png download favicon rsync -r -v --progress -e ssh anri@demo.sikn.go.id:/usr/share/nginx/nama_simpul/favicon.ico /backup_data/ input password cp -rf /backup_data/favicon.ico /nama_simpul/ && chmod 644 /nama_simpul/favicon.ico Hapus Database hapus database (seluruh tabel dan data) dieksekusi pada container database docker exec -it container_id mysql -u root -p -e 'drop database nama_database;' input password contoh: docker exec -it 600be7eefdcb mysql -u root -p -e 'drop database database_name;' atau masuk ke container database mysql -u root -p -e 'drop database database_name;' membuat database (isi dengan tabel+data) bersumber dari backup sql mysql -u root -p -e 'create database new_database character set utf8 collate utf8_unicode_ci;' contoh: docker exec -it 600be7eefdcb mysql -u root -p -e 'create database atom character set utf8 collate utf8_unicode_ci;' copy file dari host ke container docker cp /backup_data/backup_sql/database.sql container_id:/tmp/ 4. Restore Database masuk ke container docker exec -it container_id /bin/bash mysql -u root -p new_database < /tmp/database.sql; contoh: mysql -u root -p atom < /tmp/karangasem.sql 5. upgrade-sql Lokasi: Container atom docker exec -it container_id php symfony tools:upgrade-sql atau masuk ke container AtoM php symfony tools:upgrade-sql 6. index docker exec -it a4b8718b39fa php symfony cc docker exec -it a4b8718b39fa php symfony search:populate atau masuk ke kontainer AtoM php symfony cc \\ && php symfony search:populate untuk kebutuhan test create admin akun docker exec -it container_id php symfony tools:add-superuser --email=\"admin@sikn.go.id\" --password=\"******\" adminsikn Hapus user php symfony tools:delete-user -f -n adminsikn ukuran header plugins/arDominionPlugin/css/main.css empat bahasa default default culture default time cek bahasa cek worker ```","title":"Migrasi Data"},{"location":"migrasi/#prinsip-migrasi-database","text":"a. backup database b. drop database lama c. create database baru d. restore database","title":"Prinsip Migrasi Database"},{"location":"migrasi/#backup-database-sql","text":"Lokasi: Server Lama Gunakan screen jika ukuran database yang dibackup besar a. memulai screen dengan nama screen -S nama_screen b. keluar screen ctrl + a + d c. masuk screen screen -r nama_screen d. daftar screen screen -ls","title":"Backup database sql"},{"location":"migrasi/#dump-sql-data","text":"mysqldump -u root -p old_database > /tmp/nama_simpul.sql (input password)","title":"Dump SQL Data"},{"location":"migrasi/#download-data-sql","text":"Lokasi: Server Baru mkdir -p /backup_data/backup_sql \\ && cd /backup_data rsync -r -v --progress -e ssh username@ip_public:/tmp/nama_simpul.sql /backup_data/backup_sql/","title":"download data sql"},{"location":"migrasi/#melihat-ukuran-objek-digital","text":"du -sch /directory_path","title":"melihat ukuran objek digital"},{"location":"migrasi/#download-objek-digital","text":"mkdir -p /backup_data/objek-digital \\ && rsync -r -v --progress -e ssh username@ip_public:/usr/share/nginx/nama_simpul/uploads /backup_data/objek-digital cp -rf /backup_data/nama_simpul/objek-digital/uploads /sikn/nama_simpul/ chown -R www-data:www-data /sikn/nama_simpul/uploads chmod -R 0755 /sikn/nama_simpul/uploads","title":"download objek digital"},{"location":"migrasi/#download-logo","text":"rsync -r -v --progress -e ssh anri@demo.sikn.go.id:/usr/share/nginx/nama_simpul/images/logo.png /backup_data/ input password cp -rf /backup_data/logo.png /nama_simpul/images/ && chmod 644 /nama_simpul/images/logo.png","title":"download logo"},{"location":"migrasi/#download-favicon","text":"rsync -r -v --progress -e ssh anri@demo.sikn.go.id:/usr/share/nginx/nama_simpul/favicon.ico /backup_data/ input password cp -rf /backup_data/favicon.ico /nama_simpul/ && chmod 644 /nama_simpul/favicon.ico","title":"download favicon"},{"location":"migrasi/#hapus-database","text":"hapus database (seluruh tabel dan data) dieksekusi pada container database docker exec -it container_id mysql -u root -p -e 'drop database nama_database;' input password contoh: docker exec -it 600be7eefdcb mysql -u root -p -e 'drop database database_name;' atau masuk ke container database mysql -u root -p -e 'drop database database_name;' membuat database (isi dengan tabel+data) bersumber dari backup sql mysql -u root -p -e 'create database new_database character set utf8 collate utf8_unicode_ci;' contoh: docker exec -it 600be7eefdcb mysql -u root -p -e 'create database atom character set utf8 collate utf8_unicode_ci;' copy file dari host ke container docker cp /backup_data/backup_sql/database.sql container_id:/tmp/","title":"Hapus Database"},{"location":"migrasi/#4-restore-database","text":"masuk ke container docker exec -it container_id /bin/bash mysql -u root -p new_database < /tmp/database.sql; contoh: mysql -u root -p atom < /tmp/karangasem.sql","title":"4. Restore Database"},{"location":"migrasi/#5-upgrade-sql","text":"Lokasi: Container atom docker exec -it container_id php symfony tools:upgrade-sql atau masuk ke container AtoM php symfony tools:upgrade-sql","title":"5. upgrade-sql"},{"location":"migrasi/#6-index","text":"docker exec -it a4b8718b39fa php symfony cc docker exec -it a4b8718b39fa php symfony search:populate atau masuk ke kontainer AtoM php symfony cc \\ && php symfony search:populate untuk kebutuhan test create admin akun docker exec -it container_id php symfony tools:add-superuser --email=\"admin@sikn.go.id\" --password=\"******\" adminsikn Hapus user php symfony tools:delete-user -f -n adminsikn ukuran header plugins/arDominionPlugin/css/main.css empat bahasa default default culture default time cek bahasa cek worker ```","title":"6. index"},{"location":"mounting_new_disk/","text":"Disk Management melihat partisi/disk yang tersedia pada server, misalnya sda, sdb fdisk -l atau lsblk -l membuat partisi fdisk /dev/sdb Formating Disk sudo mkfs.ext4 /dev/sdb sudo mkfs.xfs /dev/sdb Mounting sudo mount /dev/sdb /mnt/sdb Permanent (To mount it automatically after each reboot) nano /etc/fstab /dev/sdb /mnt/sdb ext4 defaults 0 0 memeriksa hasil mounting mount | grep sdb","title":"Mounting new disk in server"},{"location":"mounting_new_disk/#disk-management","text":"melihat partisi/disk yang tersedia pada server, misalnya sda, sdb fdisk -l atau lsblk -l","title":"Disk Management"},{"location":"mounting_new_disk/#membuat-partisi","text":"fdisk /dev/sdb Formating Disk sudo mkfs.ext4 /dev/sdb sudo mkfs.xfs /dev/sdb","title":"membuat partisi"},{"location":"mounting_new_disk/#mounting","text":"sudo mount /dev/sdb /mnt/sdb Permanent (To mount it automatically after each reboot) nano /etc/fstab /dev/sdb /mnt/sdb ext4 defaults 0 0","title":"Mounting"},{"location":"mounting_new_disk/#memeriksa-hasil-mounting","text":"mount | grep sdb","title":"memeriksa hasil mounting"},{"location":"nfs_in_dockerswarm/","text":"NFS in centos https://www.howtoforge.com/nfs-server-and-client-on-centos-7 https://gist.github.com/ruanbekker/4a9c0d250bce9f84482f2a788ce92131#file-docker-nfs-volumes-md https://blog.dahanne.net/2017/11/20/docker-swarm-and-nfs-volumes/ https://sysadmins.co.za/docker-swarm-persistent-storage-with-nfs/ http://rockstor.com/docs/install.html https://github.com/ContainX/docker-volume-netshare https://www.portainer.io/2018/07/use-nfs-docker-local%E2%80%8B-volume-driver-portainer-io/ membuat nfs di centos SERVER SIDE install packages: yum install nfs-utils membuat directory yang akan dishare melalui NFS mkdir /var/nfsshare atur permisi dari directory /var/nfsshare chmod -R 777 /var/nfsshare chown nfsnobody:nfsnobody /var/nfsshare start and enable service systemctl enable rpcbind \\ && systemctl enable nfs-server \\ && systemctl enable nfs-lock \\ && systemctl enable nfs-idmap \\ && systemctl start rpcbind \\ && systemctl start nfs-server \\ && systemctl start nfs-lock \\ && systemctl start nfs-idmap membuat file yang berisi konfigurasi informasi client dan hak yang diberikan nano /etc/exports /var/nfsshare 192.168.101.101(rw,sync,no_root_squash,no_all_squash) catatan: 192.168.101.101 adalah alamat client yang berhak mengakses dir nfs, dapat menggunakan * agar dir nfs bisa diakses oleh client tidak terdaftar restart service nfs systemctl restart nfs-server pengaturan service nfs di firewall firewall-cmd --permanent --zone=public --add-service=nfs firewall-cmd --permanent --zone=public --add-service=mountd firewall-cmd --permanent --zone=public --add-service=rpc-bind firewall-cmd --reload CLIENT SIDE CentOS 1. Install the nfs-utild package yum install nfs-utils Ubuntu sudo apt-get install nfs-common membuat NFS directory mounts points mkdir -p /mnt/docker_volume sudo chown nobody:nogroup /mnt/docker_volume mount nfs ke directory yg sudah dibuat pada sisi client mount -t nfs 192.168.101.30:export/container /mnt/docker_volume cek nfs df -kh permanent nsf mounting nano /etc/fstab [...] 192.168.101.30:export/container /mnt/docker_volume nfs defaults 0 0 https://www.suse.com/documentation/sle-ha-12/singlehtml/book_sleha_techguides/book_sleha_techguides.html","title":"NFS in Docker Swarm"},{"location":"nfs_in_dockerswarm/#nfs-in-centos","text":"https://www.howtoforge.com/nfs-server-and-client-on-centos-7 https://gist.github.com/ruanbekker/4a9c0d250bce9f84482f2a788ce92131#file-docker-nfs-volumes-md https://blog.dahanne.net/2017/11/20/docker-swarm-and-nfs-volumes/ https://sysadmins.co.za/docker-swarm-persistent-storage-with-nfs/ http://rockstor.com/docs/install.html https://github.com/ContainX/docker-volume-netshare https://www.portainer.io/2018/07/use-nfs-docker-local%E2%80%8B-volume-driver-portainer-io/","title":"NFS in centos"},{"location":"nfs_in_dockerswarm/#membuat-nfs-di-centos","text":"","title":"membuat nfs di centos"},{"location":"nfs_in_dockerswarm/#server-side","text":"install packages: yum install nfs-utils membuat directory yang akan dishare melalui NFS mkdir /var/nfsshare atur permisi dari directory /var/nfsshare chmod -R 777 /var/nfsshare chown nfsnobody:nfsnobody /var/nfsshare start and enable service systemctl enable rpcbind \\ && systemctl enable nfs-server \\ && systemctl enable nfs-lock \\ && systemctl enable nfs-idmap \\ && systemctl start rpcbind \\ && systemctl start nfs-server \\ && systemctl start nfs-lock \\ && systemctl start nfs-idmap membuat file yang berisi konfigurasi informasi client dan hak yang diberikan nano /etc/exports /var/nfsshare 192.168.101.101(rw,sync,no_root_squash,no_all_squash) catatan: 192.168.101.101 adalah alamat client yang berhak mengakses dir nfs, dapat menggunakan * agar dir nfs bisa diakses oleh client tidak terdaftar restart service nfs systemctl restart nfs-server pengaturan service nfs di firewall firewall-cmd --permanent --zone=public --add-service=nfs firewall-cmd --permanent --zone=public --add-service=mountd firewall-cmd --permanent --zone=public --add-service=rpc-bind firewall-cmd --reload","title":"SERVER SIDE"},{"location":"nfs_in_dockerswarm/#client-side","text":"CentOS 1. Install the nfs-utild package yum install nfs-utils Ubuntu sudo apt-get install nfs-common membuat NFS directory mounts points mkdir -p /mnt/docker_volume sudo chown nobody:nogroup /mnt/docker_volume mount nfs ke directory yg sudah dibuat pada sisi client mount -t nfs 192.168.101.30:export/container /mnt/docker_volume cek nfs df -kh permanent nsf mounting nano /etc/fstab [...] 192.168.101.30:export/container /mnt/docker_volume nfs defaults 0 0 https://www.suse.com/documentation/sle-ha-12/singlehtml/book_sleha_techguides/book_sleha_techguides.html","title":"CLIENT SIDE"},{"location":"permasalahan/","text":"NFS in centos https://www.howtoforge.com/nfs-server-and-client-on-centos-7 https://gist.github.com/ruanbekker/4a9c0d250bce9f84482f2a788ce92131#file-docker-nfs-volumes-md https://blog.dahanne.net/2017/11/20/docker-swarm-and-nfs-volumes/ https://sysadmins.co.za/docker-swarm-persistent-storage-with-nfs/ http://rockstor.com/docs/install.html https://github.com/ContainX/docker-volume-netshare https://www.portainer.io/2018/07/use-nfs-docker-local%E2%80%8B-volume-driver-portainer-io/ membuat nfs di centos SERVER SIDE install packages: yum install nfs-utils membuat directory yang akan dishare melalui NFS mkdir /var/nfsshare atur permisi dari directory /var/nfsshare chmod -R 777 /var/nfsshare chown nfsnobody:nfsnobody /var/nfsshare start and enable service systemctl enable rpcbind \\ && systemctl enable nfs-server \\ && systemctl enable nfs-lock \\ && systemctl enable nfs-idmap \\ && systemctl start rpcbind \\ && systemctl start nfs-server \\ && systemctl start nfs-lock \\ && systemctl start nfs-idmap membuat file yang berisi konfigurasi informasi client dan hak yang diberikan nano /etc/exports /var/nfsshare 192.168.101.101(rw,sync,no_root_squash,no_all_squash) catatan: 192.168.101.101 adalah alamat client yang berhak mengakses dir nfs, dapat menggunakan * agar dir nfs bisa diakses oleh client tidak terdaftar restart service nfs systemctl restart nfs-server pengaturan service nfs di firewall firewall-cmd --permanent --zone=public --add-service=nfs firewall-cmd --permanent --zone=public --add-service=mountd firewall-cmd --permanent --zone=public --add-service=rpc-bind firewall-cmd --reload CLIENT SIDE CentOS 1. Install the nfs-utild package yum install nfs-utils Ubuntu sudo apt-get install nfs-common membuat NFS directory mounts points mkdir -p /mnt/docker_volume sudo chown nobody:nogroup /mnt/docker_volume mount nfs ke directory yg sudah dibuat pada sisi client mount -t nfs 192.168.101.30:export/container /mnt/docker_volume cek nfs df -kh permanent nsf mounting nano /etc/fstab [...] 192.168.101.30:export/container /mnt/docker_volume nfs defaults 0 0 https://www.suse.com/documentation/sle-ha-12/singlehtml/book_sleha_techguides/book_sleha_techguides.html","title":"Permasalahan yang sering terjadi"},{"location":"permasalahan/#nfs-in-centos","text":"https://www.howtoforge.com/nfs-server-and-client-on-centos-7 https://gist.github.com/ruanbekker/4a9c0d250bce9f84482f2a788ce92131#file-docker-nfs-volumes-md https://blog.dahanne.net/2017/11/20/docker-swarm-and-nfs-volumes/ https://sysadmins.co.za/docker-swarm-persistent-storage-with-nfs/ http://rockstor.com/docs/install.html https://github.com/ContainX/docker-volume-netshare https://www.portainer.io/2018/07/use-nfs-docker-local%E2%80%8B-volume-driver-portainer-io/","title":"NFS in centos"},{"location":"permasalahan/#membuat-nfs-di-centos","text":"","title":"membuat nfs di centos"},{"location":"permasalahan/#server-side","text":"install packages: yum install nfs-utils membuat directory yang akan dishare melalui NFS mkdir /var/nfsshare atur permisi dari directory /var/nfsshare chmod -R 777 /var/nfsshare chown nfsnobody:nfsnobody /var/nfsshare start and enable service systemctl enable rpcbind \\ && systemctl enable nfs-server \\ && systemctl enable nfs-lock \\ && systemctl enable nfs-idmap \\ && systemctl start rpcbind \\ && systemctl start nfs-server \\ && systemctl start nfs-lock \\ && systemctl start nfs-idmap membuat file yang berisi konfigurasi informasi client dan hak yang diberikan nano /etc/exports /var/nfsshare 192.168.101.101(rw,sync,no_root_squash,no_all_squash) catatan: 192.168.101.101 adalah alamat client yang berhak mengakses dir nfs, dapat menggunakan * agar dir nfs bisa diakses oleh client tidak terdaftar restart service nfs systemctl restart nfs-server pengaturan service nfs di firewall firewall-cmd --permanent --zone=public --add-service=nfs firewall-cmd --permanent --zone=public --add-service=mountd firewall-cmd --permanent --zone=public --add-service=rpc-bind firewall-cmd --reload","title":"SERVER SIDE"},{"location":"permasalahan/#client-side","text":"CentOS 1. Install the nfs-utild package yum install nfs-utils Ubuntu sudo apt-get install nfs-common membuat NFS directory mounts points mkdir -p /mnt/docker_volume sudo chown nobody:nogroup /mnt/docker_volume mount nfs ke directory yg sudah dibuat pada sisi client mount -t nfs 192.168.101.30:export/container /mnt/docker_volume cek nfs df -kh permanent nsf mounting nano /etc/fstab [...] 192.168.101.30:export/container /mnt/docker_volume nfs defaults 0 0 https://www.suse.com/documentation/sle-ha-12/singlehtml/book_sleha_techguides/book_sleha_techguides.html","title":"CLIENT SIDE"},{"location":"pic_helpdesk/","text":"Data PIC Helpdesk Nasional Berikut ini link data PIC Helpdesk Nasional secara realtime: Data PIC Helpdesk Nasional Data ini dibuat oleh: Syahrir Bima Ariseno (Pranata Komputer pada unit Pengembangan Sistem dan Jaringan Informasi Nasional)","title":"Data PIC Helpdesk Nasional"},{"location":"pic_helpdesk/#data-pic-helpdesk-nasional","text":"Berikut ini link data PIC Helpdesk Nasional secara realtime: Data PIC Helpdesk Nasional Data ini dibuat oleh: Syahrir Bima Ariseno (Pranata Komputer pada unit Pengembangan Sistem dan Jaringan Informasi Nasional)","title":"Data PIC Helpdesk Nasional"},{"location":"portainer/","text":"Persiapan Pastikan network traefik-public sudah ada a. buat domain untuk dashboard portainer contoh: portainer-arsip.karangasemkab.go.id export DOMAIN=portainer-arsip.nama_simpul.go.id \\ && export NODE_ID=$(docker info -f '{{.Swarm.NodeID}}') \\ && docker node update --label-add portainer.portainer-data=true $NODE_ID b. arahkan domain tersebut ke host docker (Private/Puclic IP) download/buat docker-compose untuk portainer simpan dalam file portainer.yml mkdir -p /opt/portainer \\ && cd /opt/portainer/ \\ && curl https://raw.githubusercontent.com/gitsikn/atom/stable/2.5.x/docker/portainer.yml -o portainer.yml untuk mode docker-swarm nano portainer.yml version: '3.3' services: agent: image: portainer/agent environment: AGENT_CLUSTER_ADDR: tasks.agent volumes: - /var/run/docker.sock:/var/run/docker.sock - /var/lib/docker/volumes:/var/lib/docker/volumes networks: - agent-network deploy: mode: global placement: constraints: - node.platform.os == linux portainer: image: portainer/portainer command: -H tcp://tasks.agent:9001 --tlsskipverify volumes: - portainer-data:/data networks: - agent-network - traefik-public deploy: placement: constraints: - node.role == manager - node.labels.portainer.portainer-data == true labels: - traefik.frontend.rule=Host:${DOMAIN?Variable DOMAIN not set} - traefik.enable=true - traefik.port=9000 - traefik.tags=traefik-public - traefik.docker.network=traefik-public # Traefik service that listens to HTTP - traefik.redirectorservice.frontend.entryPoints=http - traefik.redirectorservice.frontend.redirect.entryPoint=https # Traefik service that listens to HTTPS - traefik.webservice.frontend.entryPoints=https networks: agent-network: attachable: true traefik-public: external: true volumes: portainer-data: untuk single node version: '2' services: portainer: image: portainer/portainer command: -H unix:///var/run/docker.sock restart: always ports: - 9000:9000 volumes: - /var/run/docker.sock:/var/run/docker.sock - portainer_data:/data volumes: portainer_data: deploy portainer swarm mode docker stack deploy -c portainer.yml portainer deploy portainer single node docker-compose -f portainer.yml up -d Cek docker ps docker logs portainer_container_id Cek User Interface https://portainer.domain_name","title":"Portainer"},{"location":"portainer/#deploy-portainer-swarm-mode","text":"docker stack deploy -c portainer.yml portainer","title":"deploy portainer swarm mode"},{"location":"portainer/#deploy-portainer-single-node","text":"docker-compose -f portainer.yml up -d","title":"deploy portainer single node"},{"location":"portainer/#cek","text":"docker ps docker logs portainer_container_id","title":"Cek"},{"location":"portainer/#cek-user-interface","text":"https://portainer.domain_name","title":"Cek User Interface"},{"location":"query_data_kearsipan/","text":"Menampilkan objek digital berdasarkan jenis SELECT now() as time_sec, COUNT(CASE WHEN mime_type = 'image/jpeg' THEN 1 ELSE NULL END) AS jpeg, COUNT(CASE WHEN mime_type = 'application/pdf' THEN 1 ELSE NULL END) AS pdf FROM digital_object where object_id is not null","title":"Query Data Kearsipan"},{"location":"query_data_kearsipan/#menampilkan-objek-digital-berdasarkan-jenis","text":"SELECT now() as time_sec, COUNT(CASE WHEN mime_type = 'image/jpeg' THEN 1 ELSE NULL END) AS jpeg, COUNT(CASE WHEN mime_type = 'application/pdf' THEN 1 ELSE NULL END) AS pdf FROM digital_object where object_id is not null","title":"Menampilkan objek digital berdasarkan jenis"},{"location":"redhat_subscription/","text":"Mengubah DNS nano /etc/resolve.conf Melihat status subscription subscription-manager status memperpanjang subscription subscription-manager attach --auto","title":"Redhat subscription"},{"location":"redhat_subscription/#mengubah-dns","text":"nano /etc/resolve.conf","title":"Mengubah DNS"},{"location":"redhat_subscription/#melihat-status-subscription","text":"subscription-manager status","title":"Melihat status subscription"},{"location":"redhat_subscription/#memperpanjang-subscription","text":"subscription-manager attach --auto","title":"memperpanjang subscription"},{"location":"rhv/","text":"Update RHV Host Shutdown seluruh VM yang terdapat pada host Remove rhvm-appliance package yum remove rhvm-appliance update host From the RHV-M GUI, put the host into maintenance, then click 'Installation -> Upgrade' Note: If your hypervisor is a RHEL server, you can put it into > > maintenance and and upgrade via yum: ie: yum -y update shutdown -r now Download log dari rhv ovirt-log-collector sos-collector","title":"RHV"},{"location":"rhv/#update-rhv-host","text":"Shutdown seluruh VM yang terdapat pada host Remove rhvm-appliance package yum remove rhvm-appliance update host From the RHV-M GUI, put the host into maintenance, then click 'Installation -> Upgrade' Note: If your hypervisor is a RHEL server, you can put it into > > maintenance and and upgrade via yum: ie: yum -y update shutdown -r now","title":"Update RHV Host"},{"location":"rhv/#download-log-dari-rhv","text":"ovirt-log-collector sos-collector","title":"Download log dari rhv"},{"location":"setup_ha/","text":"http://embaby.com/blog/using-glusterfs-docker-swarm-cluster/ https://www.linuxtechi.com/setup-glusterfs-storage-on-centos-7-rhel-7/ buat disk (shareable) attach to vm format disk (lsblk) Edit /etc/hosts (gluster1)# cat /etc/hosts 127.0.0.1 localhost 192.168.101.101 gluster1 192.168.101.102 gluster2 192.168.101.103 gluster3 (gluster2)# cat /etc/hosts 127.0.0.1 localhost 192.168.101.101 gluster1 192.168.101.102 gluster2 192.168.101.103 gluster3 (gluster3)# cat /etc/hosts 127.0.0.1 localhost 192.168.101.101 gluster1 192.168.101.102 gluster2 192.168.101.103 gluster3 Gluster 1 (gluster1)# mkdir -p /gluster/bricks/1 (gluster1)# mkfs.xfs /dev/sdb (gluster1)# echo '/dev/sdb /gluster/bricks/1 xfs defaults 0 0' >> /etc/fstab (gluster1)# mount -a (gluster1)# mkdir /gluster/bricks/1/brick (gluster1)# lsblk Gluster 2 (gluster2)# mkdir -p /gluster/bricks/2 (gluster2)# mkfs.xfs /dev/sdb (gluster2)# echo '/dev/sdb /gluster/bricks/2 xfs defaults 0 0' >> /etc/fstab (gluster2)# mount -a (gluster2)# mkdir /gluster/bricks/2/brick (gluster2)# lsblk ```` ### Gluster 3 (gluster3)# mkdir -p /gluster/bricks/3 (gluster3)# mkfs.xfs /dev/sdb (gluster3)# echo '/dev/sdb /gluster/bricks/3 xfs defaults 0 0' >> /etc/fstab (gluster3)# mount -a (gluster3)# mkdir /gluster/bricks/3/brick (gluster3)# lsblk ```` Lakukan hal yang sama apabila ada penambahan gluster Install GlusterFS CentOS yum install wget -y \\ && yum install centos-release-gluster -y \\ && yum install epel-release -y \\ && yum install glusterfs-server -y \\ && systemctl start glusterd \\ && systemctl enable glusterd \\ && systemctl status glusterd Open Firewall firewall-cmd --zone=public --add-port=24007-24008/tcp --permanent firewall-cmd --zone=public --add-port=24009/tcp --permanent firewall-cmd --zone=public --add-service=nfs --add-service=samba --add-service=samba-client --permanent firewall-cmd --zone=public --add-port=111/tcp --add-port=139/tcp --add-port=445/tcp --add-port=965/tcp --add-port=2049/tcp --add-port=38465-38469/tcp --add-port=631/tcp --add-port=111/udp --add-port=963/udp --add-port=49152-49251/tcp --permanent firewall-cmd --reload Peer with other Gluster VMs (gluster1)# gluster peer probe gluster2 (gluster1)# gluster peer probe gluster3 (gluster1)# gluster peer status Setup the Gluster \u201creplicated volume\u201d (gluster1)# gluster volume create gfs \\ replica 3 \\ gluster1:/gluster/bricks/1/brick \\ gluster2:/gluster/bricks/2/brick \\ gluster3:/gluster/bricks/3/brick (gluster1)# gluster volume start gfs (gluster1)# gluster volume status gfs Setup security and authentication for this volume (gluster1)# gluster volume set gfs auth.allow 192.168.101.101,192.168.101.102,192.168.101.103 Mount the glusterFS volume where applications can access the files (gluster1)# echo 'localhost:/gfs /sikn glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab (gluster1)# mount.glusterfs localhost:/gfs /sikn (gluster2)# echo 'localhost:/gfs /sikn glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab (gluster2)# mount.glusterfs localhost:/gfs /sikn (gluster3)# echo 'localhost:/gfs /sikn glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab (gluster3)# mount.glusterfs localhost:/gfs /sikn Verify df -Th","title":"Setup HA app with Docker Swarm and Gulster"},{"location":"setup_ha/#gluster-1","text":"(gluster1)# mkdir -p /gluster/bricks/1 (gluster1)# mkfs.xfs /dev/sdb (gluster1)# echo '/dev/sdb /gluster/bricks/1 xfs defaults 0 0' >> /etc/fstab (gluster1)# mount -a (gluster1)# mkdir /gluster/bricks/1/brick (gluster1)# lsblk","title":"Gluster 1"},{"location":"setup_ha/#gluster-2","text":"(gluster2)# mkdir -p /gluster/bricks/2 (gluster2)# mkfs.xfs /dev/sdb (gluster2)# echo '/dev/sdb /gluster/bricks/2 xfs defaults 0 0' >> /etc/fstab (gluster2)# mount -a (gluster2)# mkdir /gluster/bricks/2/brick (gluster2)# lsblk ```` ### Gluster 3 (gluster3)# mkdir -p /gluster/bricks/3 (gluster3)# mkfs.xfs /dev/sdb (gluster3)# echo '/dev/sdb /gluster/bricks/3 xfs defaults 0 0' >> /etc/fstab (gluster3)# mount -a (gluster3)# mkdir /gluster/bricks/3/brick (gluster3)# lsblk ```` Lakukan hal yang sama apabila ada penambahan gluster","title":"Gluster 2"},{"location":"setup_ha/#install-glusterfs","text":"","title":"Install GlusterFS"},{"location":"setup_ha/#centos","text":"yum install wget -y \\ && yum install centos-release-gluster -y \\ && yum install epel-release -y \\ && yum install glusterfs-server -y \\ && systemctl start glusterd \\ && systemctl enable glusterd \\ && systemctl status glusterd","title":"CentOS"},{"location":"setup_ha/#open-firewall","text":"firewall-cmd --zone=public --add-port=24007-24008/tcp --permanent firewall-cmd --zone=public --add-port=24009/tcp --permanent firewall-cmd --zone=public --add-service=nfs --add-service=samba --add-service=samba-client --permanent firewall-cmd --zone=public --add-port=111/tcp --add-port=139/tcp --add-port=445/tcp --add-port=965/tcp --add-port=2049/tcp --add-port=38465-38469/tcp --add-port=631/tcp --add-port=111/udp --add-port=963/udp --add-port=49152-49251/tcp --permanent firewall-cmd --reload","title":"Open Firewall"},{"location":"setup_ha/#peer-with-other-gluster-vms","text":"(gluster1)# gluster peer probe gluster2 (gluster1)# gluster peer probe gluster3 (gluster1)# gluster peer status","title":"Peer with other Gluster VMs"},{"location":"setup_ha/#setup-the-gluster-replicated-volume","text":"(gluster1)# gluster volume create gfs \\ replica 3 \\ gluster1:/gluster/bricks/1/brick \\ gluster2:/gluster/bricks/2/brick \\ gluster3:/gluster/bricks/3/brick (gluster1)# gluster volume start gfs (gluster1)# gluster volume status gfs","title":"Setup the Gluster \u201creplicated volume\u201d"},{"location":"setup_ha/#setup-security-and-authentication-for-this-volume","text":"(gluster1)# gluster volume set gfs auth.allow 192.168.101.101,192.168.101.102,192.168.101.103","title":"Setup security and authentication for this volume"},{"location":"setup_ha/#mount-the-glusterfs-volume-where-applications-can-access-the-files","text":"(gluster1)# echo 'localhost:/gfs /sikn glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab (gluster1)# mount.glusterfs localhost:/gfs /sikn (gluster2)# echo 'localhost:/gfs /sikn glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab (gluster2)# mount.glusterfs localhost:/gfs /sikn (gluster3)# echo 'localhost:/gfs /sikn glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab (gluster3)# mount.glusterfs localhost:/gfs /sikn","title":"Mount the glusterFS volume where applications can access the files"},{"location":"setup_ha/#verify","text":"df -Th","title":"Verify"},{"location":"share_data/","text":"share volume between node in docker https://docs.docker.com/storage/volumes/","title":"Share data among machines [docker]"},{"location":"traefik/","text":"swarm mode Persiapan referensi: https://docs.traefik.io/user-guide/docker-and-lets-encrypt/ https://github.com/wekan/wekan/wiki/Traefik-and-self-signed-SSL-certs membuat network yang digunakan oleh traefik dan container docker network create --driver=overlay traefik-public docker network ls membuat env variable, sesuaikan parameter export EMAIL=nama_email && export DOMAIN=nama_root_domain && export USERNAME=admin && export PASSWORD=changethis && export HASHED_PASSWORD=$(openssl passwd -apr1 $PASSWORD) && echo $HASHED_PASSWORD && export CONSUL_REPLICAS=0 && export TRAEFIK_REPLICAS=1 Download file konfigurasi traefik mkdir /opt/traefik \\ && cd /opt/traefik \\ && curl -L https://raw.githubusercontent.com/gitsikn/atom/stable/2.5.x/docker/traefik.yml -o traefik.yml deploy traefik-consul docker stack deploy -c traefik.yml traefik-consul docker stack ps traefik-consul melihat log docker service logs traefik-consul_traefik Buat lokal DNS C:\\Windows\\System32\\drivers\\etc test web ui traefik https://traefik-arsip.nama_domain test web-ui consul https://consul-arsip.nama_domain single node (optional) docker network create web mkdir -p /opt/traefik touch /opt/traefik/docker-compose.yml version: '2' services: traefik: image: traefik restart: always ports: - 80:80 - 443:443 networks: - web volumes: - /var/run/docker.sock:/var/run/docker.sock - /opt/traefik/traefik.toml:/traefik.toml - /opt/traefik/acme.json:/acme.json container_name: traefik networks: web: external: true touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json touch /opt/traefik/traefik.toml debug = false logLevel = \"ERROR\" defaultEntryPoints = [\"https\",\"http\"] [entryPoints] [entryPoints.http] address = \":80\" [entryPoints.http.redirect] entryPoint = \"https\" [entryPoints.https] address = \":443\" [entryPoints.https.tls] [retry] [docker] endpoint = \"unix:///var/run/docker.sock\" domain = \"dispustaka.karangasemkab.go.id\" watch = true exposedByDefault = false [acme] email = \"eka.wd88@gmail.com\" storage = \"acme.json\" entryPoint = \"https\" onHostRule = true [acme.httpChallenge] entryPoint = \"http\" docker-compose -f docker-compose.yml up -d ```","title":"Traefik"},{"location":"traefik/#swarm-mode","text":"","title":"swarm mode"},{"location":"traefik/#persiapan","text":"referensi: https://docs.traefik.io/user-guide/docker-and-lets-encrypt/ https://github.com/wekan/wekan/wiki/Traefik-and-self-signed-SSL-certs membuat network yang digunakan oleh traefik dan container docker network create --driver=overlay traefik-public docker network ls membuat env variable, sesuaikan parameter export EMAIL=nama_email && export DOMAIN=nama_root_domain && export USERNAME=admin && export PASSWORD=changethis && export HASHED_PASSWORD=$(openssl passwd -apr1 $PASSWORD) && echo $HASHED_PASSWORD && export CONSUL_REPLICAS=0 && export TRAEFIK_REPLICAS=1 Download file konfigurasi traefik mkdir /opt/traefik \\ && cd /opt/traefik \\ && curl -L https://raw.githubusercontent.com/gitsikn/atom/stable/2.5.x/docker/traefik.yml -o traefik.yml deploy traefik-consul docker stack deploy -c traefik.yml traefik-consul docker stack ps traefik-consul melihat log docker service logs traefik-consul_traefik","title":"Persiapan"},{"location":"traefik/#buat-lokal-dns","text":"C:\\Windows\\System32\\drivers\\etc test web ui traefik https://traefik-arsip.nama_domain test web-ui consul https://consul-arsip.nama_domain","title":"Buat lokal DNS"},{"location":"traefik/#single-node-optional","text":"docker network create web mkdir -p /opt/traefik touch /opt/traefik/docker-compose.yml version: '2' services: traefik: image: traefik restart: always ports: - 80:80 - 443:443 networks: - web volumes: - /var/run/docker.sock:/var/run/docker.sock - /opt/traefik/traefik.toml:/traefik.toml - /opt/traefik/acme.json:/acme.json container_name: traefik networks: web: external: true touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json touch /opt/traefik/traefik.toml debug = false logLevel = \"ERROR\" defaultEntryPoints = [\"https\",\"http\"] [entryPoints] [entryPoints.http] address = \":80\" [entryPoints.http.redirect] entryPoint = \"https\" [entryPoints.https] address = \":443\" [entryPoints.https.tls] [retry] [docker] endpoint = \"unix:///var/run/docker.sock\" domain = \"dispustaka.karangasemkab.go.id\" watch = true exposedByDefault = false [acme] email = \"eka.wd88@gmail.com\" storage = \"acme.json\" entryPoint = \"https\" onHostRule = true [acme.httpChallenge] entryPoint = \"http\" docker-compose -f docker-compose.yml up -d ```","title":"single node (optional)"},{"location":"traefik_ownssl_certs/","text":"Created directories: sudo mkdir -p /opt/traefik/certs copy file .crt dan .key ke directory /opt/traefik/certs sudo chmod 755 /opt/traefik sudo chmod 750 /opt/traefik/certs chmod 644 /opt/traefik/certs/publik.crt chmod 600 /opt/traefik/certs/private.key membuat file *.toml persistant env variable in centos add env variable on file /etc/environment EMAIL=jatnikonm@anri.go.id source /etc/environment","title":"Traefik and Own SSL certs"},{"location":"wiki/","text":"build site ``` mkdocs build -c -d path","title":"Wiki"},{"location":"wiki/#build-site","text":"``` mkdocs build -c -d path","title":"build site"}]}