{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wiki SIKN dan JIKN Wiki SIKN dan JIKN merupakan sarana yang digunakan untuk menyimpan pengetahuan dan informasi terkait dengan pengembangan SIKN dan JIKN pada Arsip Nasional Republik Indonesia. Tujuan adalah Wiki SIKN dan JIKN ini adalah terdokumentasikannya seluruh arsitektur, rancangan, dan konfigurasi sistem SIKN dan JIKN Manfaat yang dapat diberikan adalah sebagai berikut: Pusat SIKN dan JIKN memiliki sistem standar untuk mendokumentasikan sistem aplikasi SDM IT pada pusat SIKN dan JIKN dapat menulis, saling berbagi pengetahuan dan berkolaborasi dalam pengembangan sistem Anggota simpul jaringan dapat mengakses dan mempelajari cara dan informasi teknis terkait dengan kebutuhan dan konfigurasi sistem aplikasi SIKN dan JIKN Menjaga kontinuitas sistem SIKN dan JIKN sehingg tetap terpelihara dan beroperasi dengan stabil","title":"Home"},{"location":"#wiki-sikn-dan-jikn","text":"Wiki SIKN dan JIKN merupakan sarana yang digunakan untuk menyimpan pengetahuan dan informasi terkait dengan pengembangan SIKN dan JIKN pada Arsip Nasional Republik Indonesia. Tujuan adalah Wiki SIKN dan JIKN ini adalah terdokumentasikannya seluruh arsitektur, rancangan, dan konfigurasi sistem SIKN dan JIKN Manfaat yang dapat diberikan adalah sebagai berikut: Pusat SIKN dan JIKN memiliki sistem standar untuk mendokumentasikan sistem aplikasi SDM IT pada pusat SIKN dan JIKN dapat menulis, saling berbagi pengetahuan dan berkolaborasi dalam pengembangan sistem Anggota simpul jaringan dapat mengakses dan mempelajari cara dan informasi teknis terkait dengan kebutuhan dan konfigurasi sistem aplikasi SIKN dan JIKN Menjaga kontinuitas sistem SIKN dan JIKN sehingg tetap terpelihara dan beroperasi dengan stabil","title":"Wiki SIKN dan JIKN"},{"location":"atom/","text":"4. Install AtoM Catatan: Instalasi pada simpul resource tidak dibatasi versi 2.5 sesuaikan nama_simpul , konfigurasi pada file sikn.yml di docker-yml/sikn.yml find and replace nama_simpul dengan nama simpul baru (alt + r) pada nano editor pastikan port pada service nginx belum digunakan sebelumnya mkdir -p /sikn \\ && cd /sikn \\ && git clone -b stable/2.5.x https://github.com/gitsikn/atom.git nama_simpul && cd /sikn/nama_simpul/docker/ chmod -R 755 /nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data sesuikan parameter database pada file docker-stack.yml password dapat digenerate menggunakan tools keypass ... #percona_database percona: image: percona:5.6 environment: - MYSQL_ROOT_PASSWORD=changethis - MYSQL_DATABASE=nama_simpul - MYSQL_USER=nama_simpul - MYSQL_PASSWORD=changethis ... 5. membuat env variable dan menjalankan container (optional) export COMPOSE_FILE=\"$PWD/docker/docker-compose.dev.yml\" atau dieksekusi dengan pilihan -f lokasi_file cd nama_simpul docker-compose -f docker-compose.yml up -d mode docker swarm docker stack deploy -c docker-stack.yml nama_simpul periksa seluruh container hingga seluruh container dengan status running docker stack ls docker stack ps nama_stack docker service logs nama_service docker ps -a 6. build stylesheets docker ps docker-compose -f docker-compose-file.yml exec service_name make -C plugins/arDominionPlugin atau docker exec container_id make -C plugins/arDominionPlugin atau masuk ke docker gui (portainer) dan masuk ke console AtoM make -C plugins/arDominionPlugin 7. purge/hapus data dari database atom dengan mengunakan mode demo docker-compose exec atom php symfony tools:purge --demo php symfony cc && php symfony search:populate atau masuk ke docker gui (portainer) dan masuk ke console AtoM php symfony tools:purge --demo restart container worker docker restart $(docker ps -a -q) melihat seluruh container dengan status up/exited","title":"Install Atom"},{"location":"atom/#4-install-atom","text":"Catatan: Instalasi pada simpul resource tidak dibatasi versi 2.5 sesuaikan nama_simpul , konfigurasi pada file sikn.yml di docker-yml/sikn.yml find and replace nama_simpul dengan nama simpul baru (alt + r) pada nano editor pastikan port pada service nginx belum digunakan sebelumnya mkdir -p /sikn \\ && cd /sikn \\ && git clone -b stable/2.5.x https://github.com/gitsikn/atom.git nama_simpul && cd /sikn/nama_simpul/docker/ chmod -R 755 /nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data sesuikan parameter database pada file docker-stack.yml password dapat digenerate menggunakan tools keypass ... #percona_database percona: image: percona:5.6 environment: - MYSQL_ROOT_PASSWORD=changethis - MYSQL_DATABASE=nama_simpul - MYSQL_USER=nama_simpul - MYSQL_PASSWORD=changethis ...","title":"4. Install AtoM"},{"location":"atom/#5-membuat-env-variable-dan-menjalankan-container-optional","text":"export COMPOSE_FILE=\"$PWD/docker/docker-compose.dev.yml\" atau dieksekusi dengan pilihan -f lokasi_file cd nama_simpul docker-compose -f docker-compose.yml up -d","title":"5. membuat env variable dan menjalankan container (optional)"},{"location":"atom/#mode-docker-swarm","text":"docker stack deploy -c docker-stack.yml nama_simpul periksa seluruh container hingga seluruh container dengan status running docker stack ls docker stack ps nama_stack docker service logs nama_service docker ps -a","title":"mode docker swarm"},{"location":"atom/#6-build-stylesheets","text":"docker ps docker-compose -f docker-compose-file.yml exec service_name make -C plugins/arDominionPlugin atau docker exec container_id make -C plugins/arDominionPlugin atau masuk ke docker gui (portainer) dan masuk ke console AtoM make -C plugins/arDominionPlugin","title":"6. build stylesheets"},{"location":"atom/#7-purgehapus-data-dari-database-atom-dengan-mengunakan-mode-demo","text":"docker-compose exec atom php symfony tools:purge --demo php symfony cc && php symfony search:populate atau masuk ke docker gui (portainer) dan masuk ke console AtoM php symfony tools:purge --demo restart container worker docker restart $(docker ps -a -q) melihat seluruh container dengan status up/exited","title":"7. purge/hapus data dari database atom dengan mengunakan mode demo"},{"location":"bestpractise/","text":"konek ke vpn Login ke server/portainer dimana aplikasi akan dideploy: a. worker1 b. worker2 c. worker3 d. worker4 e. worker5 f. worker6 cd /sikn \\ && sudo git clone -b stable/2.5.x https://github.com/gitsikn/atom.git nama_simpul Versi qa 2.6.x cd /sikn \\ git clone -b qa/2.6.x https://github.com/artefactual/atom.git nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data referensi docker-stack https://github.com/gitsikn/atom/blob/stable/2.5.x/docker/docker-stack.yml sesuaikan nama_simpul dengan nama simpul yang akan dideploy Masuk kedalam Portainer membuat stack dengan nama simpul deploy jalankan di container \"atom\" make -C plugins/arDominionPlugin \\ && php symfony tools:purge --demo publish port (jangan bentrok) test di browser http://192.168.101.100:63106 https://github.com/gitsikn/docker_documentation/wiki/6.-Migrasi-Data Membuat database baru Lokasi Eksekusi: Container Percona (database) mysql -u root -p -e 'drop database nama_simpul;' mysql -u root -p -e 'create database nama_simpul character set utf8 collate utf8_unicode_ci;' Download data mkdir -p /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul atau jika menggunakan port tertentu rsync -r -v --progress -e 'ssh -p 221' anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul Copy data dari direktory backup ke lokasi database cp -rf /sikn/backup_data/nama_simpul/nama_simpul.sql /sikn/nama_simpul/percona_data Restore Database lokasi: Container Database mysql -u root -p nama_simpul < /var/lib/mysql/nama_simpul.sql; Upgrade Database lokasi: container atom php symfony tools:upgrade-sql php symfony cc \\ && php symfony search:populate Download Objek Digital mkdir -p /sikn/backup_data/nama_simpul/ \\ cd /sikn/backup_data/nama_simpul \\ && rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/uploads /sikn/backup_data/nama_simpul/ cp -rf /sikn/backup_data/nama_simpul/uploads /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/uploads Logo dan Favicon rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/images/logo.png /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/favicon.ico /sikn/backup_data/nama_simpul ``` cp -rf /sikn/backup_data/nama_simpul/favicon.ico /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/favicon.ico cp -rf /sikn/backup_data/nama_simpul/logo.png /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/images/logo.png","title":"Best Practice Migrasi Perpusnas ANRI"},{"location":"bestpractise/#versi-qa-26x","text":"cd /sikn \\ git clone -b qa/2.6.x https://github.com/artefactual/atom.git nama_simpul sudo chmod -R 777 /sikn/nama_simpul/percona_data \\ && sudo chmod -R 777 /sikn/nama_simpul/elasticsearch_data","title":"Versi qa 2.6.x"},{"location":"bestpractise/#referensi-docker-stack","text":"https://github.com/gitsikn/atom/blob/stable/2.5.x/docker/docker-stack.yml sesuaikan nama_simpul dengan nama simpul yang akan dideploy Masuk kedalam Portainer membuat stack dengan nama simpul deploy jalankan di container \"atom\" make -C plugins/arDominionPlugin \\ && php symfony tools:purge --demo publish port (jangan bentrok) test di browser http://192.168.101.100:63106 https://github.com/gitsikn/docker_documentation/wiki/6.-Migrasi-Data","title":"referensi docker-stack"},{"location":"bestpractise/#membuat-database-baru","text":"Lokasi Eksekusi: Container Percona (database) mysql -u root -p -e 'drop database nama_simpul;' mysql -u root -p -e 'create database nama_simpul character set utf8 collate utf8_unicode_ci;'","title":"Membuat database baru"},{"location":"bestpractise/#download-data","text":"mkdir -p /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul atau jika menggunakan port tertentu rsync -r -v --progress -e 'ssh -p 221' anri@103.28.21.27:/tmp/nama_simpul.sql /sikn/backup_data/nama_simpul","title":"Download data"},{"location":"bestpractise/#copy-data-dari-direktory-backup-ke-lokasi-database","text":"cp -rf /sikn/backup_data/nama_simpul/nama_simpul.sql /sikn/nama_simpul/percona_data","title":"Copy data dari direktory backup ke lokasi database"},{"location":"bestpractise/#restore-database","text":"lokasi: Container Database mysql -u root -p nama_simpul < /var/lib/mysql/nama_simpul.sql;","title":"Restore Database"},{"location":"bestpractise/#upgrade-database","text":"lokasi: container atom php symfony tools:upgrade-sql php symfony cc \\ && php symfony search:populate","title":"Upgrade Database"},{"location":"bestpractise/#download-objek-digital","text":"mkdir -p /sikn/backup_data/nama_simpul/ \\ cd /sikn/backup_data/nama_simpul \\ && rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/uploads /sikn/backup_data/nama_simpul/ cp -rf /sikn/backup_data/nama_simpul/uploads /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/uploads","title":"Download Objek Digital"},{"location":"bestpractise/#logo-dan-favicon","text":"rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/images/logo.png /sikn/backup_data/nama_simpul rsync -r -v --progress -e ssh anri@103.28.21.27:/usr/share/nginx/nama_simpul/favicon.ico /sikn/backup_data/nama_simpul ``` cp -rf /sikn/backup_data/nama_simpul/favicon.ico /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/favicon.ico cp -rf /sikn/backup_data/nama_simpul/logo.png /sikn/nama_simpul/ \\ && chmod -R 0755 /sikn/nama_simpul/images/logo.png","title":"Logo dan Favicon"},{"location":"dashboard/","text":"Dashboard Script","title":"Dashboard"},{"location":"dashboard/#dashboard-script","text":"","title":"Dashboard Script"},{"location":"database/","text":"Backup Percona Database Referensi: https://www.percona.com/doc/percona-xtrabackup/2.2/xtrabackup_bin/creating_a_backup.html Proses backup menggunakan tools xtrabackup lokasi database pada percona: /var/lib/mysql Install xtrabackup yum install xtrabackup -y xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/data/backups/mysql/ Restore Percona Database Referensi: https://www.percona.com/doc/percona-xtrabackup/2.1/xtrabackup_bin/restoring_a_backup.html","title":"Database"},{"location":"database/#backup-percona-database","text":"Referensi: https://www.percona.com/doc/percona-xtrabackup/2.2/xtrabackup_bin/creating_a_backup.html Proses backup menggunakan tools xtrabackup lokasi database pada percona: /var/lib/mysql","title":"Backup Percona Database"},{"location":"database/#install-xtrabackup","text":"yum install xtrabackup -y xtrabackup --backup --datadir=/var/lib/mysql/ --target-dir=/data/backups/mysql/","title":"Install xtrabackup"},{"location":"database/#restore-percona-database","text":"Referensi: https://www.percona.com/doc/percona-xtrabackup/2.1/xtrabackup_bin/restoring_a_backup.html","title":"Restore Percona Database"},{"location":"extend_disk/","text":"Melihat daftar hardisk dan partisi","title":"Extend Disk Size"},{"location":"extend_disk/#melihat-daftar-hardisk-dan-partisi","text":"","title":"Melihat daftar hardisk dan partisi"},{"location":"install_docker/","text":"Melihat Spesifikasi server melihat cpu lscpu informasi memory free -m informasi disk df -h informasi OS lsb_release -a set domain name export USE_HOSTNAME=nama_domain.go.id \\ && echo $USE_HOSTNAME > /etc/hostname \\ && hostname -F /etc/hostname Install the latest updates Ubuntu apt-get update && apt-get upgrade -y CentOS yum update -y \\ yum upgrade 1. download dan install docker mkdir -p /opt/docker \\ && cd /opt/docker \\ && curl -fsSL get.docker.com -o get-docker.sh \\ && CHANNEL=stable sh get-docker.sh Configure Docker to start on boot sudo systemctl enable docker && sudo systemctl start docker 2. install docker-compose (Skip jika mengggunakan docker swarm) sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose test docker installation docker --version \\ && docker run hello-world 3. test instalasi docker-compose docker-compose --version Set Docker Experimental echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json; systemctl restart docker cek status experimental docker version -f '{{.Server.Experimental}}' Tuning virtual machines Edit /etc/sysctl.conf dengan menambahkan vm.max_map_count=262144 atau eksekusi perintah sudo sysctl -w vm.max_map_count=262144 Cek vm.max_map_count sysctl vm.max_map_count mkdir -p /etc/systemd/system/docker.service.d/ \\ && touch /etc/systemd/system/docker.service.d/10-machine.conf \\ && sudo sed -i '/ExecStart=\\/usr\\/bin\\/dockerd/ s/$/--default-ulimit memlock=-1/' /etc/systemd/system/docker.service.d/10-machine.conf akan terbentuk file override.conf pada /etc/systemd/system/docker.service.d echo -e \"[Service]\\nLimitMEMLOCK=infinity\" | SYSTEMD_EDITOR=tee systemctl edit docker.service \\ && systemctl daemon-reload && systemctl restart docker reboot Open Port on Ubuntu ufw allow 22/tcp ufw allow 2376/tcp ufw allow 2377/tcp ufw allow 7946/tcp ufw allow 7946/udp ufw allow 4789/udp ufw reload Open Port on CentOS firewall-cmd --add-port=22/tcp --permanent firewall-cmd --add-port=2376/tcp --permanent firewall-cmd --add-port=2377/tcp --permanent firewall-cmd --add-port=7946/tcp --permanent firewall-cmd --add-port=7946/udp --permanent firewall-cmd --add-port=4789/udp --permanent firewall-cmd --reload Set up swarm mode docker swarm init add manager nodes (optional) docker swarm join-token manager Add worker nodes (optional) docker swarm join-token worker check docker node ls","title":"Docker"},{"location":"install_docker/#melihat-spesifikasi-server","text":"melihat cpu lscpu informasi memory free -m informasi disk df -h informasi OS lsb_release -a","title":"Melihat Spesifikasi server"},{"location":"install_docker/#set-domain-name","text":"export USE_HOSTNAME=nama_domain.go.id \\ && echo $USE_HOSTNAME > /etc/hostname \\ && hostname -F /etc/hostname","title":"set domain name"},{"location":"install_docker/#install-the-latest-updates","text":"","title":"Install the latest updates"},{"location":"install_docker/#ubuntu","text":"apt-get update && apt-get upgrade -y CentOS yum update -y \\ yum upgrade","title":"Ubuntu"},{"location":"install_docker/#1-download-dan-install-docker","text":"mkdir -p /opt/docker \\ && cd /opt/docker \\ && curl -fsSL get.docker.com -o get-docker.sh \\ && CHANNEL=stable sh get-docker.sh","title":"1. download dan install docker"},{"location":"install_docker/#configure-docker-to-start-on-boot","text":"sudo systemctl enable docker && sudo systemctl start docker","title":"Configure Docker to start on boot"},{"location":"install_docker/#2-install-docker-compose-skip-jika-mengggunakan-docker-swarm","text":"sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose","title":"2. install docker-compose (Skip jika mengggunakan docker swarm)"},{"location":"install_docker/#test-docker-installation","text":"docker --version \\ && docker run hello-world","title":"test docker installation"},{"location":"install_docker/#3-test-instalasi-docker-compose","text":"docker-compose --version","title":"3. test instalasi docker-compose"},{"location":"install_docker/#set-docker-experimental","text":"echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json; systemctl restart docker cek status experimental docker version -f '{{.Server.Experimental}}' Tuning virtual machines Edit /etc/sysctl.conf dengan menambahkan vm.max_map_count=262144 atau eksekusi perintah sudo sysctl -w vm.max_map_count=262144 Cek vm.max_map_count sysctl vm.max_map_count mkdir -p /etc/systemd/system/docker.service.d/ \\ && touch /etc/systemd/system/docker.service.d/10-machine.conf \\ && sudo sed -i '/ExecStart=\\/usr\\/bin\\/dockerd/ s/$/--default-ulimit memlock=-1/' /etc/systemd/system/docker.service.d/10-machine.conf akan terbentuk file override.conf pada /etc/systemd/system/docker.service.d echo -e \"[Service]\\nLimitMEMLOCK=infinity\" | SYSTEMD_EDITOR=tee systemctl edit docker.service \\ && systemctl daemon-reload && systemctl restart docker reboot","title":"Set Docker Experimental"},{"location":"install_docker/#open-port-on-ubuntu","text":"ufw allow 22/tcp ufw allow 2376/tcp ufw allow 2377/tcp ufw allow 7946/tcp ufw allow 7946/udp ufw allow 4789/udp ufw reload","title":"Open Port on Ubuntu"},{"location":"install_docker/#open-port-on-centos","text":"firewall-cmd --add-port=22/tcp --permanent firewall-cmd --add-port=2376/tcp --permanent firewall-cmd --add-port=2377/tcp --permanent firewall-cmd --add-port=7946/tcp --permanent firewall-cmd --add-port=7946/udp --permanent firewall-cmd --add-port=4789/udp --permanent firewall-cmd --reload","title":"Open Port on CentOS"},{"location":"install_docker/#set-up-swarm-mode","text":"docker swarm init add manager nodes (optional) docker swarm join-token manager Add worker nodes (optional) docker swarm join-token worker check docker node ls","title":"Set up swarm mode"},{"location":"portainer/","text":"Persiapan Pastikan network traefik-public sudah ada a. buat domain untuk dashboard portainer contoh: portainer-arsip.karangasemkab.go.id export DOMAIN=portainer-arsip.nama_simpul.go.id \\ && export NODE_ID=$(docker info -f '{{.Swarm.NodeID}}') \\ && docker node update --label-add portainer.portainer-data=true $NODE_ID b. arahkan domain tersebut ke host docker (Private/Puclic IP) download/buat docker-compose untuk portainer simpan dalam file portainer.yml mkdir -p /opt/portainer \\ && cd /opt/portainer/ \\ && curl https://raw.githubusercontent.com/gitsikn/atom/stable/2.5.x/docker/portainer.yml -o portainer.yml untuk mode docker-swarm nano portainer.yml version: '3.3' services: agent: image: portainer/agent environment: AGENT_CLUSTER_ADDR: tasks.agent volumes: - /var/run/docker.sock:/var/run/docker.sock - /var/lib/docker/volumes:/var/lib/docker/volumes networks: - agent-network deploy: mode: global placement: constraints: - node.platform.os == linux portainer: image: portainer/portainer command: -H tcp://tasks.agent:9001 --tlsskipverify volumes: - portainer-data:/data networks: - agent-network - traefik-public deploy: placement: constraints: - node.role == manager - node.labels.portainer.portainer-data == true labels: - traefik.frontend.rule=Host:${DOMAIN?Variable DOMAIN not set} - traefik.enable=true - traefik.port=9000 - traefik.tags=traefik-public - traefik.docker.network=traefik-public # Traefik service that listens to HTTP - traefik.redirectorservice.frontend.entryPoints=http - traefik.redirectorservice.frontend.redirect.entryPoint=https # Traefik service that listens to HTTPS - traefik.webservice.frontend.entryPoints=https networks: agent-network: attachable: true traefik-public: external: true volumes: portainer-data: untuk single node version: '2' services: portainer: image: portainer/portainer command: -H unix:///var/run/docker.sock restart: always ports: - 9000:9000 volumes: - /var/run/docker.sock:/var/run/docker.sock - portainer_data:/data volumes: portainer_data: deploy portainer swarm mode docker stack deploy -c portainer.yml portainer deploy portainer single node docker-compose -f portainer.yml up -d Cek docker ps docker logs portainer_container_id Cek User Interface https://portainer.domain_name","title":"Portainer"},{"location":"portainer/#deploy-portainer-swarm-mode","text":"docker stack deploy -c portainer.yml portainer","title":"deploy portainer swarm mode"},{"location":"portainer/#deploy-portainer-single-node","text":"docker-compose -f portainer.yml up -d","title":"deploy portainer single node"},{"location":"portainer/#cek","text":"docker ps docker logs portainer_container_id","title":"Cek"},{"location":"portainer/#cek-user-interface","text":"https://portainer.domain_name","title":"Cek User Interface"},{"location":"redhat_subscription/","text":"Mengubah DNS nano /etc/resolve.conf Melihat status subscription subscription-manager status Download Tutorial memperpanjang subscription subscription-manager attach --auto","title":"Redhat subscription"},{"location":"redhat_subscription/#mengubah-dns","text":"nano /etc/resolve.conf","title":"Mengubah DNS"},{"location":"redhat_subscription/#melihat-status-subscription","text":"subscription-manager status Download Tutorial","title":"Melihat status subscription"},{"location":"redhat_subscription/#memperpanjang-subscription","text":"subscription-manager attach --auto","title":"memperpanjang subscription"},{"location":"rhv/","text":"Update RHV Host Shutdown seluruh VM yang terdapat pada host Remove rhvm-appliance package yum remove rhvm-appliance update host From the RHV-M GUI, put the host into maintenance, then click 'Installation -> Upgrade' Note: If your hypervisor is a RHEL server, you can put it into > > maintenance and and upgrade via yum: ie: yum -y update shutdown -r now Download log dari rhv ovirt-log-collector sos-collector","title":"RHV"},{"location":"rhv/#update-rhv-host","text":"Shutdown seluruh VM yang terdapat pada host Remove rhvm-appliance package yum remove rhvm-appliance update host From the RHV-M GUI, put the host into maintenance, then click 'Installation -> Upgrade' Note: If your hypervisor is a RHEL server, you can put it into > > maintenance and and upgrade via yum: ie: yum -y update shutdown -r now","title":"Update RHV Host"},{"location":"rhv/#download-log-dari-rhv","text":"ovirt-log-collector sos-collector","title":"Download log dari rhv"},{"location":"traefik/","text":"swarm mode Persiapan referensi: https://docs.traefik.io/user-guide/docker-and-lets-encrypt/ https://github.com/wekan/wekan/wiki/Traefik-and-self-signed-SSL-certs membuat network yang digunakan oleh traefik dan container docker network create --driver=overlay traefik-public docker network ls membuat env variable, sesuaikan parameter export EMAIL=nama_email && export DOMAIN=nama_root_domain && export USERNAME=admin && export PASSWORD=changethis && export HASHED_PASSWORD=$(openssl passwd -apr1 $PASSWORD) && echo $HASHED_PASSWORD && export CONSUL_REPLICAS=0 && export TRAEFIK_REPLICAS=1 Download file konfigurasi traefik mkdir /opt/traefik \\ && cd /opt/traefik \\ && curl -L https://raw.githubusercontent.com/gitsikn/atom/stable/2.5.x/docker/traefik.yml -o traefik.yml deploy traefik-consul docker stack deploy -c traefik.yml traefik-consul docker stack ps traefik-consul melihat log docker service logs traefik-consul_traefik Buat lokal DNS C:\\Windows\\System32\\drivers\\etc test web ui traefik https://traefik-arsip.nama_domain test web-ui consul https://consul-arsip.nama_domain single node (optional) docker network create web mkdir -p /opt/traefik touch /opt/traefik/docker-compose.yml version: '2' services: traefik: image: traefik restart: always ports: - 80:80 - 443:443 networks: - web volumes: - /var/run/docker.sock:/var/run/docker.sock - /opt/traefik/traefik.toml:/traefik.toml - /opt/traefik/acme.json:/acme.json container_name: traefik networks: web: external: true touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json touch /opt/traefik/traefik.toml debug = false logLevel = \"ERROR\" defaultEntryPoints = [\"https\",\"http\"] [entryPoints] [entryPoints.http] address = \":80\" [entryPoints.http.redirect] entryPoint = \"https\" [entryPoints.https] address = \":443\" [entryPoints.https.tls] [retry] [docker] endpoint = \"unix:///var/run/docker.sock\" domain = \"dispustaka.karangasemkab.go.id\" watch = true exposedByDefault = false [acme] email = \"eka.wd88@gmail.com\" storage = \"acme.json\" entryPoint = \"https\" onHostRule = true [acme.httpChallenge] entryPoint = \"http\" docker-compose -f docker-compose.yml up -d ```","title":"Traefik"},{"location":"traefik/#swarm-mode","text":"","title":"swarm mode"},{"location":"traefik/#persiapan","text":"referensi: https://docs.traefik.io/user-guide/docker-and-lets-encrypt/ https://github.com/wekan/wekan/wiki/Traefik-and-self-signed-SSL-certs membuat network yang digunakan oleh traefik dan container docker network create --driver=overlay traefik-public docker network ls membuat env variable, sesuaikan parameter export EMAIL=nama_email && export DOMAIN=nama_root_domain && export USERNAME=admin && export PASSWORD=changethis && export HASHED_PASSWORD=$(openssl passwd -apr1 $PASSWORD) && echo $HASHED_PASSWORD && export CONSUL_REPLICAS=0 && export TRAEFIK_REPLICAS=1 Download file konfigurasi traefik mkdir /opt/traefik \\ && cd /opt/traefik \\ && curl -L https://raw.githubusercontent.com/gitsikn/atom/stable/2.5.x/docker/traefik.yml -o traefik.yml deploy traefik-consul docker stack deploy -c traefik.yml traefik-consul docker stack ps traefik-consul melihat log docker service logs traefik-consul_traefik","title":"Persiapan"},{"location":"traefik/#buat-lokal-dns","text":"C:\\Windows\\System32\\drivers\\etc test web ui traefik https://traefik-arsip.nama_domain test web-ui consul https://consul-arsip.nama_domain","title":"Buat lokal DNS"},{"location":"traefik/#single-node-optional","text":"docker network create web mkdir -p /opt/traefik touch /opt/traefik/docker-compose.yml version: '2' services: traefik: image: traefik restart: always ports: - 80:80 - 443:443 networks: - web volumes: - /var/run/docker.sock:/var/run/docker.sock - /opt/traefik/traefik.toml:/traefik.toml - /opt/traefik/acme.json:/acme.json container_name: traefik networks: web: external: true touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json touch /opt/traefik/traefik.toml debug = false logLevel = \"ERROR\" defaultEntryPoints = [\"https\",\"http\"] [entryPoints] [entryPoints.http] address = \":80\" [entryPoints.http.redirect] entryPoint = \"https\" [entryPoints.https] address = \":443\" [entryPoints.https.tls] [retry] [docker] endpoint = \"unix:///var/run/docker.sock\" domain = \"dispustaka.karangasemkab.go.id\" watch = true exposedByDefault = false [acme] email = \"eka.wd88@gmail.com\" storage = \"acme.json\" entryPoint = \"https\" onHostRule = true [acme.httpChallenge] entryPoint = \"http\" docker-compose -f docker-compose.yml up -d ```","title":"single node (optional)"},{"location":"wiki/","text":"build site ``` mkdocs build -c -d path","title":"Wiki"},{"location":"wiki/#build-site","text":"``` mkdocs build -c -d path","title":"build site"}]}